{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"today",
				"today_formatted"
			],
			[
				"arr",
				"arr_values"
			],
			[
				"arr_all",
				"arr_all"
			],
			[
				"tree_values",
				"tree_values_tuple"
			],
			[
				"date_issed",
				"date_issued_list"
			],
			[
				"date_issued",
				"date_issued_list"
			],
			[
				"Main",
				"MainApplication"
			],
			[
				"email_add",
				"email_address_list"
			],
			[
				"email_address",
				"email_address_fetch"
			],
			[
				"time",
				"time_remaining"
			],
			[
				"empty",
				"empty_list"
			],
			[
				"password_str",
				"password_strength_container_1"
			],
			[
				"password_sten",
				"password_strength_label_2"
			],
			[
				"global",
				"global_frame"
			],
			[
				"sign",
				"sign_in_notebook"
			],
			[
				"change_pass",
				"change_password_button_container"
			],
			[
				"change_password",
				"change_password_container"
			],
			[
				"show",
				"showinfo"
			],
			[
				"ret_search",
				"ret_search_container_canvas"
			],
			[
				"email_",
				"email_input"
			],
			[
				"boo",
				"book_owner\tlist ⟠"
			],
			[
				"right",
				"RIGHT"
			],
			[
				"ret_",
				"ret_title_var"
			],
			[
				"book",
				"book_id_search\t⟠"
			],
			[
				"tab",
				"notebook_tab_change"
			],
			[
				"libr",
				"Library"
			],
			[
				"aCCOUNT",
				"Accounts"
			],
			[
				"my",
				"mybooks_tv"
			],
			[
				"Update",
				"UpdateLibraryTV"
			],
			[
				"user_em",
				"current_user_email"
			],
			[
				"account",
				"account_mybooks_check"
			],
			[
				"fro",
				"FROM"
			],
			[
				"text",
				"textvariable"
			],
			[
				"variable",
				"variable_declaration"
			],
			[
				"get",
				"get_date"
			],
			[
				"set",
				"set_date"
			],
			[
				"search",
				"search_container"
			],
			[
				"Librar",
				"LibrarySystem"
			],
			[
				"signin",
				"sign_in_notebook"
			],
			[
				"sign_in",
				"sign_in_notebook"
			],
			[
				"Register",
				"RegisterLogin"
			],
			[
				"login",
				"login_page"
			],
			[
				"selection",
				"selection_set(…)\tfunction ⟠"
			],
			[
				"dumm",
				"dummy_data_temp_2\tlist ⟠"
			],
			[
				"d",
				"dummy_data_temp_2\tlist ⟠"
			],
			[
				"top",
				"TOP\tstr ⟠"
			],
			[
				"account_container",
				"account_container_header\tLabel ⟠"
			],
			[
				"grid_",
				"grid_columnconfigure(…)\tfunction ⟠"
			],
			[
				"notebook",
				"main_notebook"
			],
			[
				"Req",
				"RequestResetForm"
			],
			[
				"Regist",
				"RegistrationForm"
			],
			[
				"Pass",
				"PasswordField"
			],
			[
				"R",
				"RequestResetForm\ttype ⟠"
			],
			[
				"Text",
				"TextAreaField\ttype ⟠"
			],
			[
				"datetime",
				"datetime\ttype ⟠"
			],
			[
				"Email",
				"email_validator\t⟠"
			],
			[
				"password",
				"password"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "import tkinter as tk\nfrom tkinter import ttk\nfrom tkinter import messagebox\n\nclass NotebookTest():\n    def __init__(self, master):\n        #declaring variables\n        self.total_comp_types = ['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']\n        self.total_comp_names = ['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']\n        self.total_comp_values = ['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']\n        self.total_comp_quantities = ['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']\n        self.total_comp_individual_costs = ['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']\n        self.total_comp_quantity_cost = ['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']\n        self.total_system_cost = 0\n\n        \n        # Turbine Costs\n        self.turbs_cost_1 = 0\n        self.turbs_cost_2 = 0\n        self.turbs_cost_3 = 0\n        self.turbs_cost_4 = 0\n        self.turbs_cost_5 = 0\n\n        # Heat Exchanger - Shell and Tube Costs\n        self.snt_cost_1 = 0\n        self.snt_cost_2 = 0\n        self.snt_cost_3 = 0\n        self.snt_cost_4 = 0\n        self.snt_cost_5 = 0\n\n        # Heat Exchanger - Plate Costs\n        self.plate_cost_1 = 0\n        self.plate_cost_2 = 0\n        self.plate_cost_3 = 0\n        self.plate_cost_4 = 0\n        self.plate_cost_5 = 0\n\n        # Heat Exchanger - ACC Costs\n        self.acc_cost_1 = 0\n        self.acc_cost_2 = 0\n        self.acc_cost_3 = 0\n        self.acc_cost_4 = 0\n        self.acc_cost_5 = 0\n\n        # Pump Costs\n        self.pump_cost_1 = 0\n        self.pump_cost_2 = 0\n        self.pump_cost_3 = 0\n        self.pump_cost_4 = 0\n        self.pump_cost_5 = 0\n\n        # Expander Costs\n        self.expander_cost_1 = 0\n        self.expander_cost_2 = 0\n        self.expander_cost_3 = 0\n        self.expander_cost_4 = 0\n        self.expander_cost_5 = 0\n\n        # Storage Tank Costs\n        self.st_cost_1 = 0\n        self.st_cost_2 = 0\n        self.st_cost_3 = 0\n        self.st_cost_4 = 0\n        self.st_cost_5 = 0\n\n\n\n        \n        # Turbine Quantities\n        self.turbine_quantity_1 = 0\n        self.turbine_quantity_2 = 0\n        self.turbine_quantity_3 = 0\n        self.turbine_quantity_4 = 0\n        self.turbine_quantity_5 = 0\n\n        # Heat Exchanger - Shell and Tube Quantities\n        self.snt_quantity_1 = 0\n        self.snt_quantity_2 = 0\n        self.snt_quantity_3 = 0\n        self.snt_quantity_4 = 0\n        self.snt_quantity_5 = 0\n\n        # Heat Exchanger - Plate Quantities\n        self.plate_quantity_1 = 0\n        self.plate_quantity_2 = 0\n        self.plate_quantity_3 = 0\n        self.plate_quantity_4 = 0\n        self.plate_quantity_5 = 0\n\n        # Heat Exchanger - Air-Cooled Condenser Quantities\n        self.acc_quantity_1 = 0\n        self.acc_quantity_2 = 0\n        self.acc_quantity_3 = 0\n        self.acc_quantity_4 = 0\n        self.acc_quantity_5 = 0\n\n        #Pump Quantities\n        self.pump_quantity_1 = 0\n        self.pump_quantity_2 = 0\n        self.pump_quantity_3 = 0\n        self.pump_quantity_4 = 0\n        self.pump_quantity_5 = 0\n\n        #Expander Quantities\n        self.expander_quantity_1 = 0\n        self.expander_quantity_2 = 0\n        self.expander_quantity_3 = 0\n        self.expander_quantity_4 = 0\n        self.expander_quantity_5 = 0\n\n        #Storage Tank Quantities\n        self.st_quantity_1 = 0\n        self.st_quantity_2 = 0\n        self.st_quantity_3 = 0\n        self.st_quantity_4 = 0\n        self.st_quantity_5 = 0\n\n\n\n        ### Totals\n        #Turbines Totals\n        self.turbs_total_1 = 0\n        self.turbs_total_2 = 0\n        self.turbs_total_3 = 0\n        self.turbs_total_3 = 0\n        self.turbs_total_5 = 0\n        self.turbs_total = 0\n\n        #Heat Exchangers - SNT\n        self.snt_total_1 = 0\n        self.snt_total_2 = 0\n        self.snt_total_3 = 0\n        self.snt_total_4 = 0\n        self.snt_total_5 = 0\n        self.snt_total = 0\n\n        #Heat Exchangers - Plate\n        self.plate_total_1 = 0\n        self.plate_total_2 = 0\n        self.plate_total_3 = 0\n        self.plate_total_4 = 0\n        self.plate_total_5 = 0\n        self.plate_total = 0\n\n        #Heat Exchangers - ACC\n        self.acc_total_1 = 0\n        self.acc_total_2 = 0\n        self.acc_total_3 = 0\n        self.acc_total_4 = 0\n        self.acc_total_5 = 0\n        self.acc_total = 0\n\n        #Pumps\n        self.pump_total_1 = 0\n        self.pump_total_2 = 0\n        self.pump_total_3 = 0\n        self.pump_total_4 = 0\n        self.pump_total_5 = 0\n        self.pump_total = 0\n\n        #Expander\n        self.expander_total_1 = 0\n        self.expander_total_2 = 0\n        self.expander_total_3 = 0\n        self.expander_total_4 = 0\n        self.expander_total_5 = 0\n        self.expander_total = 0\n\n        #Storage Tank\n        self.st_total_1 = 0\n        self.st_total_2 = 0\n        self.st_total_3 = 0\n        self.st_total_4 = 0\n        self.st_total_5 = 0\n        self.st_total = 0\n\n        ### Values\n        #Turbine Area Values\n        self.turbine_power_1 = 0\n        self.turbine_power_2 = 0\n        self.turbine_power_3 = 0\n        self.turbine_power_4 = 0\n        self.turbine_power_5 = 0\n        \n        #SNT Area Values\n        self.snt_area_1 = 0\n        self.snt_area_2 = 0\n        self.snt_area_3 = 0\n        self.snt_area_4 = 0\n        self.snt_area_5 = 0\n\n        # Plate Area Values\n        self.plate_area_1 = 0\n        self.plate_area_2 = 0\n        self.plate_area_3 = 0\n        self.plate_area_4 = 0\n        self.plate_area_5 = 0\n\n        #ACC Area Values\n        self.acc_area_1 = 0\n        self.acc_area_2 = 0\n        self.acc_area_3 = 0\n        self.acc_area_4 = 0\n        self.acc_area_5 = 0\n\n        #Pump Power Values\n        self.pump_power_1 = 0\n        self.pump_power_2 = 0\n        self.pump_power_3 = 0\n        self.pump_power_4 = 0\n        self.pump_power_5 = 0\n\n        #Expander Power Values\n        self.expander_power_1 = 0\n        self.expander_power_2 = 0\n        self.expander_power_3 = 0\n        self.expander_power_4 = 0\n        self.expander_power_5 = 0\n\n        #Storage Tank Volumes\n        self.st_volume_1 = 0\n        self.st_volume_2 = 0\n        self.st_volume_3 = 0\n        self.st_volume_4 = 0\n        self.st_volume_5 = 0\n        \n\n\n        \n        # configuration\n        master.configure(bg='gray15')\n        master.title('Component Cost Calculator')\n        master.option_add('*Font', 'System 12')\n        master.option_add('*Label.Font', 'System 14')\n        master.geometry('1920x1080')\n        master.wm_state('zoomed')\n\n        \n        frame1_page1 = tk.Frame(master, relief=tk.FLAT, borderwidth=1, bg='gray15')\n        frame1_page1.pack(side=tk.TOP, fill=tk.BOTH)\n\n        logo_header = tk.Label(frame1_page1, relief=tk.GROOVE, borderwidth=1, bg='ghost white')\n        logo_header.config(bd=0, text='Component Cost Calculator v2.16.5', font='System 12')\n        logo_header.pack(fill=tk.X, anchor=tk.N)\n        \n        main_notebook = ttk.Notebook(master)\n        main_notebook.pack(expand=True, fill=tk.BOTH)\n        \n        ### Making all 8 pages\n        self.page0 = tk.Frame(main_notebook)\n        main_notebook.add(self.page0, text='Home')\n        \n        self.page1 = tk.Frame(main_notebook, bg='gray20')\n        main_notebook.add(self.page1, text=\"Turbine\")\n        \n        self.page2 = tk.Frame(main_notebook, bg='gray20')\n        main_notebook.add(self.page2, text=\"Heat Exchangers\")\n\n        self.page3 = tk.Frame(main_notebook, bg='gray20')\n        main_notebook.add(self.page3, text=\"Pumps\")\n\n        self.page4 = tk.Frame(main_notebook, bg='gray20')\n        main_notebook.add(self.page4, text=\"Expanders\")\n\n        self.page5 = tk.Frame(main_notebook, bg='gray20')\n        main_notebook.add(self.page5, text=\"Storage Tanks\")\n\n        ### Making the Results page\n        self.page6 = tk.Frame(main_notebook, bg='gray20')\n        main_notebook.add(self.page6, text=\"Results\")\n        \n        ### Making the Help page\n        self.page7 = tk.Frame(main_notebook, bg='gray20')\n        main_notebook.add(self.page7, text=\"About\")\n\n\n        home_frame = tk.Frame(self.page0, bg='gray20')\n        home_frame.pack(expand=True)\n\n        title_label = tk.Label(home_frame)\n        title_label.config(bd=0, text='How to use this software', font='System 30')\n        title_label.pack(expand=True, fill=tk.X,anchor=tk.N)\n\n        howtouse_frame = tk.Frame(home_frame)\n        howtouse_frame.pack(fill=tk.BOTH, expand=True)\n\n        tip_label_1 = tk.Label(howtouse_frame)\n        tip_label_1.config(bd=0, text=\"- Each tab shows each component and where said components' information must be entered.\")\n        tip_label_1.pack(side=tk.TOP)\n\n        tip_label_2 = tk.Label(howtouse_frame)\n        tip_label_2.config(bd=0, text='- Enter your information into any of the 5 (for now) given boxes accordingly.')\n        tip_label_2.pack(side=tk.TOP)\n\n        tip_label_3 = tk.Label(howtouse_frame)\n        tip_label_3.config(bd=0, text=\"- Press the 'Enter Information' button once you have made sure all information entered is correct and you want to submit it into the final system cost calculation.\")\n        tip_label_3.pack(side=tk.TOP)\n\n        tip_label_4 = tk.Label(howtouse_frame)\n        tip_label_4.config(bd=0, text=\"- If you would like to go back and make a change, just edit the component information of the component in question and press the 'Enter Information' button again.\")\n        tip_label_4.pack(side=tk.TOP)\n\n        tip_label_5 = tk.Label(howtouse_frame)\n        tip_label_5.config(bd=0, text=\"- If you would like to remove a component from the final calculation, remove the components' NAME (leaving it as an empty field) and leave the AREA/POWER/VOLUME field as the value '0.0'.\")\n        tip_label_5.pack(side=tk.TOP)\n\n        tip_label_6 = tk.Label(howtouse_frame)\n        tip_label_6.config(bd=0, text=\"- You may press the column headings of the table at the 'Results' table to sort the information alphabetically or numerically.\")\n        tip_label_6.pack(side=tk.TOP)\n\n        tip_label_7 = tk.Label(howtouse_frame)\n        tip_label_7.config(bd=0, text=\"- When you are ready for the final total system calculation, press the 'Calculate' button in the 'Results' page and press OK on the prompt box. Your final value should update. At this point, you are free to go back and tinker any values prior.\")\n        tip_label_7.pack(side=tk.TOP)\n\n        tip_label_8 = tk.Label(howtouse_frame)\n        tip_label_8.config(bd=0, text=\"- It may sometimes appear that the 'Results' table is empty, though it is most likely that the component is at the bottom of the list. Simple scroll down to find it.\")\n        tip_label_8.pack(side=tk.TOP)\n\n\n        ### About page\n        about_frame = tk.Frame(self.page7, bg='gray20')\n        about_frame.pack(expand=True)\n\n        title_label_1 = tk.Label(about_frame, bg='gray20')\n        title_label_1.config(bd=0, text='Software Developed by Marco Fernandes', font='System 30', fg='yellow')\n        title_label_1.pack(expand=True, fill=tk.X,anchor=tk.N)\n\n        title_label_2 = tk.Label(about_frame, bg='gray20')\n        title_label_2.config(bd=0, text='Component Cost Equations Developed by Robert Platica', font='System 30', fg='yellow')\n        title_label_2.pack(expand=True, fill=tk.X,anchor=tk.N)\n\n        aboutme_frame = tk.Frame(about_frame)\n        aboutme_frame.pack(fill=tk.BOTH, expand=True)\n\n        about_label = tk.Label(aboutme_frame, bg='gray20')\n        about_label.config(bd=0, text='- Support for 20+ components to be developed.', fg='yellow')\n        about_label.pack(side=tk.TOP, expand=True, fill=tk.BOTH)\n        \n\n        \n\n\n        # enter information button +frame\n        enter_info_frame_page1 = tk.Frame(self.page1, bg='gray25')\n        enter_info_frame_page1.pack(side=tk.BOTTOM, anchor=tk.N, expand=True, fill=tk.X)\n\n        ### Making Enter Information Button.\n        enter_info_button_frame_page4 = tk.Frame(enter_info_frame_page1, relief=tk.GROOVE, bd=0, bg='gray15')\n        enter_info_button_frame_page4.pack(side=tk.BOTTOM)\n\n        enter_info_button_label_page4 = tk.Label(enter_info_frame_page1, relief=tk.GROOVE, bg='gray15')\n        enter_info_button_label_page4.config(text='Confirm Information:', font='System 6', fg='yellow')\n        enter_info_button_label_page4.pack(pady=10)\n\n        enter_info_button_page4 = tk.Button(enter_info_frame_page1)\n        enter_info_button_page4.config(relief=tk.RAISED, bd=5, text='    Enter Information    ',\n                                 command=self.info_button_get)\n        enter_info_button_page4.pack(side=tk.BOTTOM, anchor=tk.S, pady=15, padx=15)\n\n\n\n        ### Turbines GUI\n        main_frame_page1_1 = tk.Frame(self.page1, bg='gray15')\n        main_frame_page1_1.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page1_1 = tk.Frame(main_frame_page1_1, bg='gray15')\n        info_canvas_title_frame_page1_1.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page1_1 = tk.Label(info_canvas_title_frame_page1_1, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page1_1.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page1_1.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page1_1 = tk.Canvas(info_canvas_title_frame_page1_1, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page1_1.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_turb_frame_1 = tk.Frame(infobox_canvas_page1_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_turb_frame_1.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_turb_label_1 = tk.Label(infobox_cname_turb_frame_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_turb_label_1.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_turb_label_1.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = self.page1.register(self.cname_validate)\n\n        self.entry_cname_turb_var_1 = tk.StringVar(self.page1)\n        self.entry_cname_turb_var_1.set('')\n        infobox_cname_turb_entry_1 = tk.Entry(infobox_cname_turb_frame_1)\n        infobox_cname_turb_entry_1.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_turb_var_1,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_turb_entry_1.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Power entry field\n        infobox_power_turb_frame_1 = tk.Frame(infobox_canvas_page1_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_turb_frame_1.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_power_turb_label_1 = tk.Label(infobox_power_turb_frame_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_turb_label_1.config(bd=0, text='Power (kW): ', font='System 6', fg='yellow')\n        infobox_power_turb_label_1.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        power_reg = self.page1.register(self.power_validate)\n\n        self.entry_power_turb_var_1 = tk.DoubleVar(self.page1)\n        self.entry_power_turb_var_1.set('0.0')\n        infobox_power_turb_entry_1 = tk.Entry(infobox_power_turb_frame_1)\n        infobox_power_turb_entry_1.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_power_turb_var_1,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(power_reg, \"%P\"))\n        infobox_power_turb_entry_1.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_turb_frame_1 = tk.Frame(infobox_canvas_page1_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_turb_frame_1.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_turb_label_1 = tk.Label(infobox_quantity_turb_frame_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_turb_label_1.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_turb_label_1.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = self.page1.register(self.quantity_validate)\n\n        self.entry_quantity_turb_var_1 = tk.IntVar(self.page1)\n        self.entry_quantity_turb_var_1.set('1')\n        infobox_quantity_turb_entry_1 = tk.Entry(infobox_quantity_turb_frame_1)\n        infobox_quantity_turb_entry_1.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_turb_var_1,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_turb_entry_1.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n        ### 2\n        ### Turbines GUI\n        main_frame_page1_2 = tk.Frame(self.page1, bg='gray15')\n        main_frame_page1_2.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page1_2 = tk.Frame(main_frame_page1_2, bg='gray15')\n        info_canvas_title_frame_page1_2.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page1_2 = tk.Label(info_canvas_title_frame_page1_2, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page1_2.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page1_2.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page1_2 = tk.Canvas(info_canvas_title_frame_page1_2, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page1_2.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_turb_frame_2 = tk.Frame(infobox_canvas_page1_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_turb_frame_2.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_turb_label_2 = tk.Label(infobox_cname_turb_frame_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_turb_label_2.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_turb_label_2.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = self.page1.register(self.cname_validate)\n\n        self.entry_cname_turb_var_2 = tk.StringVar(self.page1)\n        self.entry_cname_turb_var_2.set('')\n        infobox_cname_turb_entry_2 = tk.Entry(infobox_cname_turb_frame_2)\n        infobox_cname_turb_entry_2.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_turb_var_2,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_turb_entry_2.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Power entry field\n        infobox_power_turb_frame_2 = tk.Frame(infobox_canvas_page1_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_turb_frame_2.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_power_turb_label_2 = tk.Label(infobox_power_turb_frame_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_turb_label_2.config(bd=0, text='Power (kW): ', font='System 6', fg='yellow')\n        infobox_power_turb_label_2.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        power_reg = self.page1.register(self.power_validate)\n\n        self.entry_power_turb_var_2 = tk.DoubleVar(self.page1)\n        self.entry_power_turb_var_2.set('0.0')\n        infobox_power_turb_entry_2 = tk.Entry(infobox_power_turb_frame_2)\n        infobox_power_turb_entry_2.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_power_turb_var_2,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(power_reg, \"%P\"))\n        infobox_power_turb_entry_2.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_turb_frame_2 = tk.Frame(infobox_canvas_page1_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_turb_frame_2.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_turb_label_2 = tk.Label(infobox_quantity_turb_frame_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_turb_label_2.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_turb_label_2.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = self.page1.register(self.quantity_validate)\n\n        self.entry_quantity_turb_var_2 = tk.IntVar(self.page1)\n        self.entry_quantity_turb_var_2.set('1')\n        infobox_quantity_turb_entry_2 = tk.Entry(infobox_quantity_turb_frame_2)\n        infobox_quantity_turb_entry_2.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_turb_var_2,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_turb_entry_2.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n        ### 3\n        ### Turbines GUI\n        main_frame_page1_3 = tk.Frame(self.page1, bg='gray15')\n        main_frame_page1_3.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page1_3 = tk.Frame(main_frame_page1_3, bg='gray15')\n        info_canvas_title_frame_page1_3.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page1_3 = tk.Label(info_canvas_title_frame_page1_3, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page1_3.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page1_3.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page1_3 = tk.Canvas(info_canvas_title_frame_page1_3, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page1_3.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_turb_frame_3 = tk.Frame(infobox_canvas_page1_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_turb_frame_3.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_turb_label_3 = tk.Label(infobox_cname_turb_frame_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_turb_label_3.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_turb_label_3.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = self.page1.register(self.cname_validate)\n\n        self.entry_cname_turb_var_3 = tk.StringVar(self.page1)\n        self.entry_cname_turb_var_3.set('')\n        infobox_cname_turb_entry_3 = tk.Entry(infobox_cname_turb_frame_3)\n        infobox_cname_turb_entry_3.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_turb_var_3,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_turb_entry_3.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Power entry field\n        infobox_power_turb_frame_3 = tk.Frame(infobox_canvas_page1_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_turb_frame_3.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_power_turb_label_3 = tk.Label(infobox_power_turb_frame_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_turb_label_3.config(bd=0, text='Power (kW): ', font='System 6', fg='yellow')\n        infobox_power_turb_label_3.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        power_reg = self.page1.register(self.power_validate)\n\n        self.entry_power_turb_var_3 = tk.DoubleVar(self.page1)\n        self.entry_power_turb_var_3.set('0.0')\n        infobox_power_turb_entry_3 = tk.Entry(infobox_power_turb_frame_3)\n        infobox_power_turb_entry_3.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_power_turb_var_3,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(power_reg, \"%P\"))\n        infobox_power_turb_entry_3.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_turb_frame_3 = tk.Frame(infobox_canvas_page1_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_turb_frame_3.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_turb_label_3 = tk.Label(infobox_quantity_turb_frame_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_turb_label_3.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_turb_label_3.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = self.page1.register(self.quantity_validate)\n\n        self.entry_quantity_turb_var_3 = tk.IntVar(self.page1)\n        self.entry_quantity_turb_var_3.set('1')\n        infobox_quantity_turb_entry_3 = tk.Entry(infobox_quantity_turb_frame_3)\n        infobox_quantity_turb_entry_3.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_turb_var_3,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_turb_entry_3.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n\n\n        ### 4\n        ### Turbines GUI\n        main_frame_page1_4 = tk.Frame(self.page1, bg='gray15')\n        main_frame_page1_4.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page1_4 = tk.Frame(main_frame_page1_4, bg='gray15')\n        info_canvas_title_frame_page1_4.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page1_4 = tk.Label(info_canvas_title_frame_page1_4, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page1_4.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page1_4.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page1_4 = tk.Canvas(info_canvas_title_frame_page1_4, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page1_4.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_turb_frame_4 = tk.Frame(infobox_canvas_page1_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_turb_frame_4.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_turb_label_4 = tk.Label(infobox_cname_turb_frame_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_turb_label_4.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_turb_label_4.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = self.page1.register(self.cname_validate)\n\n        self.entry_cname_turb_var_4 = tk.StringVar(self.page1)\n        self.entry_cname_turb_var_4.set('')\n        infobox_cname_turb_entry_4 = tk.Entry(infobox_cname_turb_frame_4)\n        infobox_cname_turb_entry_4.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_turb_var_4,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_turb_entry_4.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Power entry field\n        infobox_power_turb_frame_4 = tk.Frame(infobox_canvas_page1_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_turb_frame_4.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_power_turb_label_4 = tk.Label(infobox_power_turb_frame_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_turb_label_4.config(bd=0, text='Power (kW): ', font='System 6', fg='yellow')\n        infobox_power_turb_label_4.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        power_reg = self.page1.register(self.power_validate)\n\n        self.entry_power_turb_var_4 = tk.DoubleVar(self.page1)\n        self.entry_power_turb_var_4.set('0.0')\n        infobox_power_turb_entry_4 = tk.Entry(infobox_power_turb_frame_4)\n        infobox_power_turb_entry_4.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_power_turb_var_4,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(power_reg, \"%P\"))\n        infobox_power_turb_entry_4.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_turb_frame_4 = tk.Frame(infobox_canvas_page1_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_turb_frame_4.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_turb_label_4 = tk.Label(infobox_quantity_turb_frame_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_turb_label_4.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_turb_label_4.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = self.page1.register(self.quantity_validate)\n\n        self.entry_quantity_turb_var_4 = tk.IntVar(self.page1)\n        self.entry_quantity_turb_var_4.set('1')\n        infobox_quantity_turb_entry_4 = tk.Entry(infobox_quantity_turb_frame_4)\n        infobox_quantity_turb_entry_4.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_turb_var_4,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_turb_entry_4.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n\n        ### 5\n        ### Turbines GUI\n        main_frame_page1_5 = tk.Frame(self.page1, bg='gray15')\n        main_frame_page1_5.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page1_5 = tk.Frame(main_frame_page1_5, bg='gray15')\n        info_canvas_title_frame_page1_5.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page1_5 = tk.Label(info_canvas_title_frame_page1_5, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page1_5.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page1_5.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page1_5 = tk.Canvas(info_canvas_title_frame_page1_5, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page1_5.pack(side=tk.TOP, anchor=tk.NW, padx=30, pady=15)\n\n        # Component Name entry field\n        infobox_cname_turb_frame_5 = tk.Frame(infobox_canvas_page1_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_turb_frame_5.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_turb_label_5 = tk.Label(infobox_cname_turb_frame_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_turb_label_5.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_turb_label_5.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = self.page1.register(self.cname_validate)\n\n        self.entry_cname_turb_var_5 = tk.StringVar(self.page1)\n        self.entry_cname_turb_var_5.set('')\n        infobox_cname_turb_entry_5 = tk.Entry(infobox_cname_turb_frame_5)\n        infobox_cname_turb_entry_5.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_turb_var_5,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_turb_entry_5.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Power entry field\n        infobox_power_turb_frame_5 = tk.Frame(infobox_canvas_page1_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_turb_frame_5.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_power_turb_label_5 = tk.Label(infobox_power_turb_frame_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_turb_label_5.config(bd=0, text='Power (kW): ', font='System 6', fg='yellow')\n        infobox_power_turb_label_5.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        power_reg = self.page1.register(self.power_validate)\n\n        self.entry_power_turb_var_5 = tk.DoubleVar(self.page1)\n        self.entry_power_turb_var_5.set('0.0')\n        infobox_power_turb_entry_5 = tk.Entry(infobox_power_turb_frame_5)\n        infobox_power_turb_entry_5.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_power_turb_var_5,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(power_reg, \"%P\"))\n        infobox_power_turb_entry_5.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_turb_frame_5 = tk.Frame(infobox_canvas_page1_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_turb_frame_5.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_turb_label_5 = tk.Label(infobox_quantity_turb_frame_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_turb_label_5.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_turb_label_5.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = self.page1.register(self.quantity_validate)\n\n        self.entry_quantity_turb_var_5 = tk.IntVar(self.page1)\n        self.entry_quantity_turb_var_5.set('1')\n        infobox_quantity_turb_entry_5 = tk.Entry(infobox_quantity_turb_frame_5)\n        infobox_quantity_turb_entry_5.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_turb_var_5,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_turb_entry_5.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n        \n\n\n\n\n        \n        ### HEAT EXCHANGERS GUIs\n        #Subheading of main page\n        sub_notebook = ttk.Notebook(self.page2)\n        sub_notebook.pack(expand=True, fill=tk.BOTH)\n\n        page2a = tk.Frame(sub_notebook, bg='gray20')\n        sub_notebook.add(page2a, text=\"Shell and Tube\")\n\n        page2b = tk.Frame(sub_notebook, bg='gray20')\n        sub_notebook.add(page2b, text=\"Plate\")\n\n        page2c = tk.Frame(sub_notebook, bg='gray20')\n        sub_notebook.add(page2c, text=\"Air-Cooled Condenser\")\n\n        # enter information button +frame\n        enter_info_frame_page1_snt = tk.Frame(page2a, bg='gray25')\n        enter_info_frame_page1_snt.pack(side=tk.BOTTOM, anchor=tk.N, expand=True, fill=tk.X)\n\n        ### Making Enter Information Button.\n        enter_info_button_frame_page4_snt = tk.Frame(enter_info_frame_page1_snt, relief=tk.GROOVE, bd=0, bg='gray15')\n        enter_info_button_frame_page4_snt.pack(side=tk.BOTTOM)\n\n        enter_info_button_frame_page4_snt = tk.Label(enter_info_frame_page1_snt, relief=tk.GROOVE, bg='gray15')\n        enter_info_button_frame_page4_snt.config(text='Confirm Information:', font='System 6', fg='yellow')\n        enter_info_button_frame_page4_snt.pack(pady=10)\n\n        enter_info_button_page4_snt = tk.Button(enter_info_frame_page1_snt)\n        enter_info_button_page4_snt.config(relief=tk.RAISED, bd=5, text='    Enter Information    ',\n                                 command=self.info_button_get)\n        enter_info_button_page4_snt.pack(side=tk.BOTTOM, anchor=tk.S, pady=15, padx=15)\n\n\n\n        \n\n        # enter information button +frame - plate\n        enter_info_frame_page1_plate = tk.Frame(page2b, bg='gray25')\n        enter_info_frame_page1_plate.pack(side=tk.BOTTOM, anchor=tk.N, expand=True, fill=tk.X)\n\n        ### Making Enter Information Button.\n        enter_info_button_frame_page4_plate = tk.Frame(enter_info_frame_page1_plate, relief=tk.GROOVE, bd=0, bg='gray15')\n        enter_info_button_frame_page4_plate.pack(side=tk.BOTTOM)\n\n        enter_info_button_frame_page4_plate = tk.Label(enter_info_frame_page1_plate, relief=tk.GROOVE, bg='gray15')\n        enter_info_button_frame_page4_plate.config(text='Confirm Information:', font='System 6', fg='yellow')\n        enter_info_button_frame_page4_plate.pack(pady=10)\n\n        enter_info_button_page4_plate = tk.Button(enter_info_frame_page1_plate)\n        enter_info_button_page4_plate.config(relief=tk.RAISED, bd=5, text='    Enter Information    ',\n                                 command=self.info_button_get)\n        enter_info_button_page4_plate.pack(side=tk.BOTTOM, anchor=tk.S, pady=15, padx=15)\n\n\n\n\n\n\n        # enter information button +frame - acc\n        enter_info_frame_page1_acc = tk.Frame(page2c, bg='gray25')\n        enter_info_frame_page1_acc.pack(side=tk.BOTTOM, anchor=tk.N, expand=True, fill=tk.X)\n\n        ### Making Enter Information Button.\n        enter_info_button_frame_page4_acc = tk.Frame(enter_info_frame_page1_acc, relief=tk.GROOVE, bd=0, bg='gray15')\n        enter_info_button_frame_page4_acc.pack(side=tk.BOTTOM)\n\n        enter_info_button_frame_page4_acc = tk.Label(enter_info_frame_page1_acc, relief=tk.GROOVE, bg='gray15')\n        enter_info_button_frame_page4_acc.config(text='Confirm Information:', font='System 6', fg='yellow')\n        enter_info_button_frame_page4_acc.pack(pady=10)\n\n        enter_info_button_page4_acc = tk.Button(enter_info_frame_page1_acc)\n        enter_info_button_page4_acc.config(relief=tk.RAISED, bd=5, text='    Enter Information    ',\n                                 command=self.info_button_get)\n        enter_info_button_page4_acc.pack(side=tk.BOTTOM, anchor=tk.S, pady=15, padx=15)\n\n\n\n        \n\n        ### Shell n Tube GUI #1\n        main_frame_page2a_1 = tk.Frame(page2a, bg='gray15')\n        main_frame_page2a_1.pack(side=tk.LEFT, anchor=tk.N, padx=75, pady=10)\n\n        info_canvas_title_frame_page2a_1 = tk.Frame(main_frame_page2a_1, bg='gray15')\n        info_canvas_title_frame_page2a_1.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page2a_1 = tk.Label(info_canvas_title_frame_page2a_1, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page2a_1.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page2a_1.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page2a_1 = tk.Canvas(info_canvas_title_frame_page2a_1, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page2a_1.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_frame_snt_1 = tk.Frame(infobox_canvas_page2a_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_frame_snt_1.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_label_snt_1 = tk.Label(infobox_cname_frame_snt_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_label_snt_1.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_label_snt_1.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = page2a.register(self.cname_validate)\n\n        self.entry_cname_snt_var_1 = tk.StringVar(page2a)\n        self.entry_cname_snt_var_1.set('')\n        infobox_cname_snt_entry_1 = tk.Entry(infobox_cname_frame_snt_1)\n        infobox_cname_snt_entry_1.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_snt_var_1,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_snt_entry_1.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_area_snt_frame_1 = tk.Frame(infobox_canvas_page2a_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_snt_frame_1.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_area_snt_label_1 = tk.Label(infobox_area_snt_frame_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_snt_label_1.config(bd=0, text='Area (㎡): ', font='System 6', fg='yellow')\n        infobox_area_snt_label_1.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        area_reg = page2a.register(self.area_validate)\n\n        self.entry_area_snt_var_1 = tk.DoubleVar(page2a)\n        self.entry_area_snt_var_1.set('0.0')\n        infobox_area_snt_entry_1 = tk.Entry(infobox_area_snt_frame_1)\n        infobox_area_snt_entry_1.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_area_snt_var_1,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(area_reg, \"%P\"))\n        infobox_area_snt_entry_1.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_snt_frame_1 = tk.Frame(infobox_canvas_page2a_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_snt_frame_1.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_snt_label_1 = tk.Label(infobox_quantity_snt_frame_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_snt_label_1.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_snt_label_1.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = page2a.register(self.quantity_validate)\n\n        self.entry_quantity_snt_var_1 = tk.IntVar(page2a)\n        self.entry_quantity_snt_var_1.set('1')\n        infobox_quantity_snt_entry_1 = tk.Entry(infobox_quantity_snt_frame_1)\n        infobox_quantity_snt_entry_1.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_snt_var_1,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_snt_entry_1.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n\n\n\n\n\n\n\n        \n        ### Plate GUI\n        main_frame_page2b_1 = tk.Frame(page2b, bg='gray15')\n        main_frame_page2b_1.pack(side=tk.LEFT, anchor=tk.N, padx=75, pady=10)\n\n        info_canvas_title_frame_page2b_1 = tk.Frame(main_frame_page2b_1, bg='gray15')\n        info_canvas_title_frame_page2b_1.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_plate_title_label_page2b_1 = tk.Label(info_canvas_title_frame_page2b_1, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_plate_title_label_page2b_1.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_plate_title_label_page2b_1.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page2b_1 = tk.Canvas(info_canvas_title_frame_page2b_1, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page2b_1.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_plate_frame_1 = tk.Frame(infobox_canvas_page2b_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_plate_frame_1.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_plate_label_1 = tk.Label(infobox_cname_plate_frame_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_plate_label_1.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_plate_label_1.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = page2b.register(self.cname_validate)\n\n        self.entry_cname_plate_var_1 = tk.StringVar(page2b)\n        self.entry_cname_plate_var_1.set('')\n        infobox_cname_plate_entry_1 = tk.Entry(infobox_cname_plate_frame_1)\n        infobox_cname_plate_entry_1.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_plate_var_1,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_plate_entry_1.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_area_plate_frame_1 = tk.Frame(infobox_canvas_page2b_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_plate_frame_1.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_area_plate_label_1 = tk.Label(infobox_area_plate_frame_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_plate_label_1.config(bd=0, text='Area (㎡): ', font='System 6', fg='yellow')\n        infobox_area_plate_label_1.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        area_reg = page2b.register(self.area_validate)\n\n        self.entry_area_plate_var_1 = tk.DoubleVar(page2b)\n        self.entry_area_plate_var_1.set('0.0')\n        infobox_area_plate_entry_1 = tk.Entry(infobox_area_plate_frame_1)\n        infobox_area_plate_entry_1.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_area_plate_var_1,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(area_reg, \"%P\"))\n        infobox_area_plate_entry_1.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_plate_frame_1 = tk.Frame(infobox_canvas_page2b_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_plate_frame_1.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_plate_label_1 = tk.Label(infobox_quantity_plate_frame_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_plate_label_1.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_plate_label_1.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = page2b.register(self.quantity_validate)\n\n        self.entry_quantity_plate_var_1 = tk.IntVar(page2b)\n        self.entry_quantity_plate_var_1.set('1')\n        infobox_quantity_plate_entry_1 = tk.Entry(infobox_quantity_plate_frame_1)\n        infobox_quantity_plate_entry_1.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_plate_var_1,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_plate_entry_1.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n\n        \n        ### Condenser\n        main_frame_page2c_1 = tk.Frame(page2c, bg='gray15')\n        main_frame_page2c_1.pack(side=tk.LEFT, anchor=tk.N, padx=75, pady=10)\n\n        info_canvas_title_frame_page2c_1 = tk.Frame(main_frame_page2c_1, bg='gray15')\n        info_canvas_title_frame_page2c_1.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page2c_1 = tk.Label(info_canvas_title_frame_page2c_1, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page2c_1.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page2c_1.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page2c_1 = tk.Canvas(info_canvas_title_frame_page2c_1, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page2c_1.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_condenser_frame_1 = tk.Frame(infobox_canvas_page2c_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_condenser_frame_1.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_condenser_label_1 = tk.Label(infobox_cname_condenser_frame_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_condenser_label_1.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_condenser_label_1.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = page2c.register(self.cname_validate)\n\n        self.entry_cname_condenser_var_1 = tk.StringVar(page2c)\n        self.entry_cname_condenser_var_1.set('')\n        infobox_cname_condenser_entry_1 = tk.Entry(infobox_cname_condenser_frame_1)\n        infobox_cname_condenser_entry_1.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_condenser_var_1,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_condenser_entry_1.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_area_condenser_frame_1 = tk.Frame(infobox_canvas_page2c_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_condenser_frame_1.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_area_condenser_label_1 = tk.Label(infobox_area_condenser_frame_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_condenser_label_1.config(bd=0, text='Area (㎡): ', font='System 6', fg='yellow')\n        infobox_area_condenser_label_1.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        area_reg = page2c.register(self.area_validate)\n\n        self.entry_area_condenser_var_1 = tk.DoubleVar(page2c)\n        self.entry_area_condenser_var_1.set('0.0')\n        infobox_area_condenser_entry_1 = tk.Entry(infobox_area_condenser_frame_1)\n        infobox_area_condenser_entry_1.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_area_condenser_var_1,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(area_reg, \"%P\"))\n        infobox_area_condenser_entry_1.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_condenser_frame_1 = tk.Frame(infobox_canvas_page2c_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_condenser_frame_1.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_condenser_label_1 = tk.Label(infobox_quantity_condenser_frame_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_condenser_label_1.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_condenser_label_1.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = page2c.register(self.quantity_validate)\n\n        self.entry_quantity_condenser_var_1 = tk.IntVar(page2c)\n        self.entry_quantity_condenser_var_1.set('1')\n        infobox_quantity_condenser_entry_1 = tk.Entry(infobox_quantity_condenser_frame_1)\n        infobox_quantity_condenser_entry_1.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_condenser_var_1,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_condenser_entry_1.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n\n\n        ### 2\n        ### Shell n Tube GUI\n        main_frame_page2a_2 = tk.Frame(page2a, bg='gray15')\n        main_frame_page2a_2.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page2a_2 = tk.Frame(main_frame_page2a_2, bg='gray15')\n        info_canvas_title_frame_page2a_2.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page2a_2 = tk.Label(info_canvas_title_frame_page2a_2, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page2a_2.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page2a_2.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page2a_2 = tk.Canvas(info_canvas_title_frame_page2a_2, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page2a_2.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_frame_snt_2 = tk.Frame(infobox_canvas_page2a_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_frame_snt_2.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_label_snt_2 = tk.Label(infobox_cname_frame_snt_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_label_snt_2.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_label_snt_2.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = page2a.register(self.cname_validate)\n\n        self.entry_cname_snt_var_2 = tk.StringVar(page2a)\n        self.entry_cname_snt_var_2.set('')\n        infobox_cname_snt_entry_2 = tk.Entry(infobox_cname_frame_snt_2)\n        infobox_cname_snt_entry_2.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_snt_var_2,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_snt_entry_2.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_area_snt_frame_2 = tk.Frame(infobox_canvas_page2a_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_snt_frame_2.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_area_snt_label_2 = tk.Label(infobox_area_snt_frame_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_snt_label_2.config(bd=0, text='Area (㎡): ', font='System 6', fg='yellow')\n        infobox_area_snt_label_2.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        area_reg = page2a.register(self.area_validate)\n\n        self.entry_area_snt_var_2 = tk.DoubleVar(page2a)\n        self.entry_area_snt_var_2.set('0.0')\n        infobox_area_snt_entry_2 = tk.Entry(infobox_area_snt_frame_2)\n        infobox_area_snt_entry_2.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_area_snt_var_2,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(area_reg, \"%P\"))\n        infobox_area_snt_entry_2.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_snt_frame_2 = tk.Frame(infobox_canvas_page2a_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_snt_frame_2.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_snt_label_2 = tk.Label(infobox_quantity_snt_frame_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_snt_label_2.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_snt_label_2.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = page2a.register(self.quantity_validate)\n\n        self.entry_quantity_snt_var_2 = tk.IntVar(page2a)\n        self.entry_quantity_snt_var_2.set('1')\n        infobox_quantity_snt_entry_2 = tk.Entry(infobox_quantity_snt_frame_2)\n        infobox_quantity_snt_entry_2.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_snt_var_2,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_snt_entry_2.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n\n\n\n\n\n\n        \n        ### Plate GUI\n        main_frame_page2b_2 = tk.Frame(page2b, bg='gray15')\n        main_frame_page2b_2.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page2b_2 = tk.Frame(main_frame_page2b_2, bg='gray15')\n        info_canvas_title_frame_page2b_2.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_plate_title_label_page2b_2 = tk.Label(info_canvas_title_frame_page2b_2, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_plate_title_label_page2b_2.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_plate_title_label_page2b_2.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page2b_2 = tk.Canvas(info_canvas_title_frame_page2b_2, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page2b_2.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_plate_frame_2 = tk.Frame(infobox_canvas_page2b_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_plate_frame_2.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_plate_label_2 = tk.Label(infobox_cname_plate_frame_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_plate_label_2.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_plate_label_2.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = page2b.register(self.cname_validate)\n\n        self.entry_cname_plate_var_2 = tk.StringVar(page2b)\n        self.entry_cname_plate_var_2.set('')\n        infobox_cname_plate_entry_2 = tk.Entry(infobox_cname_plate_frame_2)\n        infobox_cname_plate_entry_2.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_plate_var_2,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_plate_entry_2.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_area_plate_frame_2 = tk.Frame(infobox_canvas_page2b_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_plate_frame_2.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_area_plate_label_2 = tk.Label(infobox_area_plate_frame_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_plate_label_2.config(bd=0, text='Area (㎡): ', font='System 6', fg='yellow')\n        infobox_area_plate_label_2.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        area_reg = page2b.register(self.area_validate)\n\n        self.entry_area_plate_var_2 = tk.DoubleVar(page2b)\n        self.entry_area_plate_var_2.set('0.0')\n        infobox_area_plate_entry_2 = tk.Entry(infobox_area_plate_frame_2)\n        infobox_area_plate_entry_2.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_area_plate_var_2,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(area_reg, \"%P\"))\n        infobox_area_plate_entry_2.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_plate_frame_2 = tk.Frame(infobox_canvas_page2b_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_plate_frame_2.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_plate_label_2 = tk.Label(infobox_quantity_plate_frame_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_plate_label_2.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_plate_label_2.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = page2b.register(self.quantity_validate)\n\n        self.entry_quantity_plate_var_2 = tk.IntVar(page2b)\n        self.entry_quantity_plate_var_2.set('1')\n        infobox_quantity_plate_entry_2 = tk.Entry(infobox_quantity_plate_frame_2)\n        infobox_quantity_plate_entry_2.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_plate_var_2,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_plate_entry_2.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n\n\n\n\n        \n        ### Condenser\n        main_frame_page2c_2 = tk.Frame(page2c, bg='gray15')\n        main_frame_page2c_2.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page2c_2 = tk.Frame(main_frame_page2c_2, bg='gray15')\n        info_canvas_title_frame_page2c_2.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page2c_2 = tk.Label(info_canvas_title_frame_page2c_2, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page2c_2.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page2c_2.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page2c_2 = tk.Canvas(info_canvas_title_frame_page2c_2, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page2c_2.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_condenser_frame_2 = tk.Frame(infobox_canvas_page2c_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_condenser_frame_2.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_condenser_label_2 = tk.Label(infobox_cname_condenser_frame_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_condenser_label_2.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_condenser_label_2.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = page2c.register(self.cname_validate)\n\n        self.entry_cname_condenser_var_2 = tk.StringVar(page2c)\n        self.entry_cname_condenser_var_2.set('')\n        infobox_cname_condenser_entry_2 = tk.Entry(infobox_cname_condenser_frame_2)\n        infobox_cname_condenser_entry_2.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_condenser_var_2,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_condenser_entry_2.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_area_condenser_frame_2 = tk.Frame(infobox_canvas_page2c_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_condenser_frame_2.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_area_condenser_label_2 = tk.Label(infobox_area_condenser_frame_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_condenser_label_2.config(bd=0, text='Area (㎡): ', font='System 6', fg='yellow')\n        infobox_area_condenser_label_2.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        area_reg = page2c.register(self.area_validate)\n\n        self.entry_area_condenser_var_2 = tk.DoubleVar(page2c)\n        self.entry_area_condenser_var_2.set('0.0')\n        infobox_area_condenser_entry_2 = tk.Entry(infobox_area_condenser_frame_2)\n        infobox_area_condenser_entry_2.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_area_condenser_var_2,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(area_reg, \"%P\"))\n        infobox_area_condenser_entry_2.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_condenser_frame_2 = tk.Frame(infobox_canvas_page2c_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_condenser_frame_2.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_condenser_label_2 = tk.Label(infobox_quantity_condenser_frame_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_condenser_label_2.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_condenser_label_2.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = page2c.register(self.quantity_validate)\n\n        self.entry_quantity_condenser_var_2 = tk.IntVar(page2c)\n        self.entry_quantity_condenser_var_2.set('1')\n        infobox_quantity_condenser_entry_2 = tk.Entry(infobox_quantity_condenser_frame_2)\n        infobox_quantity_condenser_entry_2.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_condenser_var_2,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_condenser_entry_2.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n\n        ### 3\n        ### Shell n Tube GUI\n        main_frame_page2a_3 = tk.Frame(page2a, bg='gray15')\n        main_frame_page2a_3.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page2a_3 = tk.Frame(main_frame_page2a_3, bg='gray15')\n        info_canvas_title_frame_page2a_3.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page2a_3 = tk.Label(info_canvas_title_frame_page2a_3, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page2a_3.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page2a_3.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page2a_3 = tk.Canvas(info_canvas_title_frame_page2a_3, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page2a_3.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_frame_snt_3 = tk.Frame(infobox_canvas_page2a_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_frame_snt_3.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_label_snt_3 = tk.Label(infobox_cname_frame_snt_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_label_snt_3.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_label_snt_3.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = page2a.register(self.cname_validate)\n\n        self.entry_cname_snt_var_3 = tk.StringVar(page2a)\n        self.entry_cname_snt_var_3.set('')\n        infobox_cname_snt_entry_3 = tk.Entry(infobox_cname_frame_snt_3)\n        infobox_cname_snt_entry_3.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_snt_var_3,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_snt_entry_3.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_area_snt_frame_3 = tk.Frame(infobox_canvas_page2a_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_snt_frame_3.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_area_snt_label_3 = tk.Label(infobox_area_snt_frame_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_snt_label_3.config(bd=0, text='Area (㎡): ', font='System 6', fg='yellow')\n        infobox_area_snt_label_3.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        area_reg = page2a.register(self.area_validate)\n\n        self.entry_area_snt_var_3 = tk.DoubleVar(page2a)\n        self.entry_area_snt_var_3.set('0.0')\n        infobox_area_snt_entry_3 = tk.Entry(infobox_area_snt_frame_3)\n        infobox_area_snt_entry_3.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_area_snt_var_3,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(area_reg, \"%P\"))\n        infobox_area_snt_entry_3.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_snt_frame_3 = tk.Frame(infobox_canvas_page2a_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_snt_frame_3.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_snt_label_3 = tk.Label(infobox_quantity_snt_frame_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_snt_label_3.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_snt_label_3.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = page2a.register(self.quantity_validate)\n\n        self.entry_quantity_snt_var_3 = tk.IntVar(page2a)\n        self.entry_quantity_snt_var_3.set('1')\n        infobox_quantity_snt_entry_3 = tk.Entry(infobox_quantity_snt_frame_3)\n        infobox_quantity_snt_entry_3.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_snt_var_3,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_snt_entry_3.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n\n\n\n\n\n\n        \n        ### Plate GUI\n        main_frame_page2b_3 = tk.Frame(page2b, bg='gray15')\n        main_frame_page2b_3.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page2b_3 = tk.Frame(main_frame_page2b_3, bg='gray15')\n        info_canvas_title_frame_page2b_3.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_plate_title_label_page2b_3 = tk.Label(info_canvas_title_frame_page2b_3, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_plate_title_label_page2b_3.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_plate_title_label_page2b_3.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page2b_3 = tk.Canvas(info_canvas_title_frame_page2b_3, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page2b_3.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_plate_frame_3 = tk.Frame(infobox_canvas_page2b_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_plate_frame_3.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_plate_label_3 = tk.Label(infobox_cname_plate_frame_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_plate_label_3.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_plate_label_3.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = page2b.register(self.cname_validate)\n\n        self.entry_cname_plate_var_3 = tk.StringVar(page2b)\n        self.entry_cname_plate_var_3.set('')\n        infobox_cname_plate_entry_3 = tk.Entry(infobox_cname_plate_frame_3)\n        infobox_cname_plate_entry_3.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_plate_var_3,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_plate_entry_3.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_area_plate_frame_3 = tk.Frame(infobox_canvas_page2b_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_plate_frame_3.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_area_plate_label_3 = tk.Label(infobox_area_plate_frame_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_plate_label_3.config(bd=0, text='Area (㎡): ', font='System 6', fg='yellow')\n        infobox_area_plate_label_3.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        area_reg = page2b.register(self.area_validate)\n\n        self.entry_area_plate_var_3 = tk.DoubleVar(page2b)\n        self.entry_area_plate_var_3.set('0.0')\n        infobox_area_plate_entry_3 = tk.Entry(infobox_area_plate_frame_3)\n        infobox_area_plate_entry_3.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_area_plate_var_3,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(area_reg, \"%P\"))\n        infobox_area_plate_entry_3.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_plate_frame_3 = tk.Frame(infobox_canvas_page2b_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_plate_frame_3.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_plate_label_3 = tk.Label(infobox_quantity_plate_frame_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_plate_label_3.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_plate_label_3.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = page2b.register(self.quantity_validate)\n\n        self.entry_quantity_plate_var_3 = tk.IntVar(page2b)\n        self.entry_quantity_plate_var_3.set('1')\n        infobox_quantity_plate_entry_3 = tk.Entry(infobox_quantity_plate_frame_3)\n        infobox_quantity_plate_entry_3.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_plate_var_3,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_plate_entry_3.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n\n\n\n\n        \n        ### Condenser\n        main_frame_page2c_3 = tk.Frame(page2c, bg='gray15')\n        main_frame_page2c_3.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page2c_3 = tk.Frame(main_frame_page2c_3, bg='gray15')\n        info_canvas_title_frame_page2c_3.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page2c_3 = tk.Label(info_canvas_title_frame_page2c_3, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page2c_3.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page2c_3.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page2c_3 = tk.Canvas(info_canvas_title_frame_page2c_3, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page2c_3.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_condenser_frame_3 = tk.Frame(infobox_canvas_page2c_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_condenser_frame_3.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_condenser_label_3 = tk.Label(infobox_cname_condenser_frame_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_condenser_label_3.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_condenser_label_3.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = page2c.register(self.cname_validate)\n\n        self.entry_cname_condenser_var_3 = tk.StringVar(page2c)\n        self.entry_cname_condenser_var_3.set('')\n        infobox_cname_condenser_entry_3 = tk.Entry(infobox_cname_condenser_frame_3)\n        infobox_cname_condenser_entry_3.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_condenser_var_3,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_condenser_entry_3.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_area_condenser_frame_3 = tk.Frame(infobox_canvas_page2c_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_condenser_frame_3.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_area_condenser_label_3 = tk.Label(infobox_area_condenser_frame_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_condenser_label_3.config(bd=0, text='Area (㎡): ', font='System 6', fg='yellow')\n        infobox_area_condenser_label_3.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        area_reg = page2c.register(self.area_validate)\n\n        self.entry_area_condenser_var_3 = tk.DoubleVar(page2c)\n        self.entry_area_condenser_var_3.set('0.0')\n        infobox_area_condenser_entry_3 = tk.Entry(infobox_area_condenser_frame_3)\n        infobox_area_condenser_entry_3.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_area_condenser_var_3,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(area_reg, \"%P\"))\n        infobox_area_condenser_entry_3.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_condenser_frame_3 = tk.Frame(infobox_canvas_page2c_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_condenser_frame_3.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_condenser_label_3 = tk.Label(infobox_quantity_condenser_frame_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_condenser_label_3.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_condenser_label_3.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = page2c.register(self.quantity_validate)\n\n        self.entry_quantity_condenser_var_3 = tk.IntVar(page2c)\n        self.entry_quantity_condenser_var_3.set('1')\n        infobox_quantity_condenser_entry_3 = tk.Entry(infobox_quantity_condenser_frame_3)\n        infobox_quantity_condenser_entry_3.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_condenser_var_3,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_condenser_entry_3.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n\n\n\n        ### 4\n        ### Shell n Tube GUI\n        main_frame_page2a_4 = tk.Frame(page2a, bg='gray15')\n        main_frame_page2a_4.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page2a_4 = tk.Frame(main_frame_page2a_4, bg='gray15')\n        info_canvas_title_frame_page2a_4.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page2a_4 = tk.Label(info_canvas_title_frame_page2a_4, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page2a_4.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page2a_4.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page2a_4 = tk.Canvas(info_canvas_title_frame_page2a_4, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page2a_4.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_frame_snt_4 = tk.Frame(infobox_canvas_page2a_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_frame_snt_4.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_label_snt_4 = tk.Label(infobox_cname_frame_snt_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_label_snt_4.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_label_snt_4.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = page2a.register(self.cname_validate)\n\n        self.entry_cname_snt_var_4 = tk.StringVar(page2a)\n        self.entry_cname_snt_var_4.set('')\n        infobox_cname_snt_entry_4 = tk.Entry(infobox_cname_frame_snt_4)\n        infobox_cname_snt_entry_4.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_snt_var_4,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_snt_entry_4.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_area_snt_frame_4 = tk.Frame(infobox_canvas_page2a_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_snt_frame_4.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_area_snt_label_4 = tk.Label(infobox_area_snt_frame_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_snt_label_4.config(bd=0, text='Area (㎡): ', font='System 6', fg='yellow')\n        infobox_area_snt_label_4.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        area_reg = page2a.register(self.area_validate)\n\n        self.entry_area_snt_var_4 = tk.DoubleVar(page2a)\n        self.entry_area_snt_var_4.set('0.0')\n        infobox_area_snt_entry_4 = tk.Entry(infobox_area_snt_frame_4)\n        infobox_area_snt_entry_4.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_area_snt_var_4,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(area_reg, \"%P\"))\n        infobox_area_snt_entry_4.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_snt_frame_4 = tk.Frame(infobox_canvas_page2a_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_snt_frame_4.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_snt_label_4 = tk.Label(infobox_quantity_snt_frame_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_snt_label_4.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_snt_label_4.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = page2a.register(self.quantity_validate)\n\n        self.entry_quantity_snt_var_4 = tk.IntVar(page2a)\n        self.entry_quantity_snt_var_4.set('1')\n        infobox_quantity_snt_entry_4 = tk.Entry(infobox_quantity_snt_frame_4)\n        infobox_quantity_snt_entry_4.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_snt_var_4,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_snt_entry_4.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n\n\n\n\n\n\n        \n        ### Plate GUI\n        main_frame_page2b_4 = tk.Frame(page2b, bg='gray15')\n        main_frame_page2b_4.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page2b_4 = tk.Frame(main_frame_page2b_4, bg='gray15')\n        info_canvas_title_frame_page2b_4.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_plate_title_label_page2b_4 = tk.Label(info_canvas_title_frame_page2b_4, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_plate_title_label_page2b_4.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_plate_title_label_page2b_4.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page2b_4 = tk.Canvas(info_canvas_title_frame_page2b_4, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page2b_4.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_plate_frame_4 = tk.Frame(infobox_canvas_page2b_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_plate_frame_4.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_plate_label_4 = tk.Label(infobox_cname_plate_frame_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_plate_label_4.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_plate_label_4.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = page2b.register(self.cname_validate)\n\n        self.entry_cname_plate_var_4 = tk.StringVar(page2b)\n        self.entry_cname_plate_var_4.set('')\n        infobox_cname_plate_entry_4 = tk.Entry(infobox_cname_plate_frame_4)\n        infobox_cname_plate_entry_4.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_plate_var_4,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_plate_entry_4.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_area_plate_frame_4 = tk.Frame(infobox_canvas_page2b_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_plate_frame_4.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_area_plate_label_4 = tk.Label(infobox_area_plate_frame_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_plate_label_4.config(bd=0, text='Area (㎡): ', font='System 6', fg='yellow')\n        infobox_area_plate_label_4.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        area_reg = page2b.register(self.area_validate)\n\n        self.entry_area_plate_var_4 = tk.DoubleVar(page2b)\n        self.entry_area_plate_var_4.set('0.0')\n        infobox_area_plate_entry_4 = tk.Entry(infobox_area_plate_frame_4)\n        infobox_area_plate_entry_4.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_area_plate_var_4,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(area_reg, \"%P\"))\n        infobox_area_plate_entry_4.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_plate_frame_4 = tk.Frame(infobox_canvas_page2b_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_plate_frame_4.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_plate_label_4 = tk.Label(infobox_quantity_plate_frame_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_plate_label_4.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_plate_label_4.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = page2b.register(self.quantity_validate)\n\n        self.entry_quantity_plate_var_4 = tk.IntVar(page2b)\n        self.entry_quantity_plate_var_4.set('1')\n        infobox_quantity_plate_entry_4 = tk.Entry(infobox_quantity_plate_frame_4)\n        infobox_quantity_plate_entry_4.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_plate_var_4,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_plate_entry_4.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n\n\n\n\n        \n        ### Condenser\n        main_frame_page2c_4 = tk.Frame(page2c, bg='gray15')\n        main_frame_page2c_4.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page2c_4 = tk.Frame(main_frame_page2c_4, bg='gray15')\n        info_canvas_title_frame_page2c_4.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page2c_4 = tk.Label(info_canvas_title_frame_page2c_4, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page2c_4.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page2c_4.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page2c_4 = tk.Canvas(info_canvas_title_frame_page2c_4, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page2c_4.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_condenser_frame_4 = tk.Frame(infobox_canvas_page2c_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_condenser_frame_4.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_condenser_label_4 = tk.Label(infobox_cname_condenser_frame_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_condenser_label_4.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_condenser_label_4.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = page2c.register(self.cname_validate)\n\n        self.entry_cname_condenser_var_4 = tk.StringVar(page2c)\n        self.entry_cname_condenser_var_4.set('')\n        infobox_cname_condenser_entry_4 = tk.Entry(infobox_cname_condenser_frame_4)\n        infobox_cname_condenser_entry_4.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_condenser_var_4,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_condenser_entry_4.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_area_condenser_frame_4 = tk.Frame(infobox_canvas_page2c_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_condenser_frame_4.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_area_condenser_label_4 = tk.Label(infobox_area_condenser_frame_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_condenser_label_4.config(bd=0, text='Area (㎡): ', font='System 6', fg='yellow')\n        infobox_area_condenser_label_4.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        area_reg = page2c.register(self.area_validate)\n\n        self.entry_area_condenser_var_4 = tk.DoubleVar(page2c)\n        self.entry_area_condenser_var_4.set('0.0')\n        infobox_area_condenser_entry_4 = tk.Entry(infobox_area_condenser_frame_4)\n        infobox_area_condenser_entry_4.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_area_condenser_var_4,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(area_reg, \"%P\"))\n        infobox_area_condenser_entry_4.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_condenser_frame_4 = tk.Frame(infobox_canvas_page2c_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_condenser_frame_4.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_condenser_label_4 = tk.Label(infobox_quantity_condenser_frame_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_condenser_label_4.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_condenser_label_4.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = page2c.register(self.quantity_validate)\n\n        self.entry_quantity_condenser_var_4 = tk.IntVar(page2c)\n        self.entry_quantity_condenser_var_4.set('1')\n        infobox_quantity_condenser_entry_4 = tk.Entry(infobox_quantity_condenser_frame_4)\n        infobox_quantity_condenser_entry_4.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_condenser_var_4,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_condenser_entry_4.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n\n\n\n\n\n\n\n        ### 4\n        ### Shell n Tube GUI\n        main_frame_page2a_5 = tk.Frame(page2a, bg='gray15')\n        main_frame_page2a_5.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page2a_5 = tk.Frame(main_frame_page2a_5, bg='gray15')\n        info_canvas_title_frame_page2a_5.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page2a_5 = tk.Label(info_canvas_title_frame_page2a_5, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page2a_5.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page2a_5.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page2a_5 = tk.Canvas(info_canvas_title_frame_page2a_5, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page2a_5.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_frame_snt_5 = tk.Frame(infobox_canvas_page2a_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_frame_snt_5.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_label_snt_5 = tk.Label(infobox_cname_frame_snt_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_label_snt_5.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_label_snt_5.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = page2a.register(self.cname_validate)\n\n        self.entry_cname_snt_var_5 = tk.StringVar(page2a)\n        self.entry_cname_snt_var_5.set('')\n        infobox_cname_snt_entry_5 = tk.Entry(infobox_cname_frame_snt_5)\n        infobox_cname_snt_entry_5.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_snt_var_5,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_snt_entry_5.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_area_snt_frame_5 = tk.Frame(infobox_canvas_page2a_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_snt_frame_5.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_area_snt_label_5 = tk.Label(infobox_area_snt_frame_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_snt_label_5.config(bd=0, text='Area (㎡): ', font='System 6', fg='yellow')\n        infobox_area_snt_label_5.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        area_reg = page2a.register(self.area_validate)\n\n        self.entry_area_snt_var_5 = tk.DoubleVar(page2a)\n        self.entry_area_snt_var_5.set('0.0')\n        infobox_area_snt_entry_5 = tk.Entry(infobox_area_snt_frame_5)\n        infobox_area_snt_entry_5.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_area_snt_var_5,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(area_reg, \"%P\"))\n        infobox_area_snt_entry_5.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_snt_frame_5 = tk.Frame(infobox_canvas_page2a_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_snt_frame_5.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_snt_label_5 = tk.Label(infobox_quantity_snt_frame_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_snt_label_5.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_snt_label_5.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = page2a.register(self.quantity_validate)\n\n        self.entry_quantity_snt_var_5 = tk.IntVar(page2a)\n        self.entry_quantity_snt_var_5.set('1')\n        infobox_quantity_snt_entry_5 = tk.Entry(infobox_quantity_snt_frame_5)\n        infobox_quantity_snt_entry_5.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_snt_var_4,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_snt_entry_5.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n\n\n\n\n\n\n        \n        ### Plate GUI\n        main_frame_page2b_5 = tk.Frame(page2b, bg='gray15')\n        main_frame_page2b_5.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page2b_5 = tk.Frame(main_frame_page2b_5, bg='gray15')\n        info_canvas_title_frame_page2b_5.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_plate_title_label_page2b_5 = tk.Label(info_canvas_title_frame_page2b_5, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_plate_title_label_page2b_5.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_plate_title_label_page2b_5.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page2b_5 = tk.Canvas(info_canvas_title_frame_page2b_5, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page2b_5.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_plate_frame_5 = tk.Frame(infobox_canvas_page2b_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_plate_frame_5.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_plate_label_5 = tk.Label(infobox_cname_plate_frame_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_plate_label_5.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_plate_label_5.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = page2b.register(self.cname_validate)\n\n        self.entry_cname_plate_var_5 = tk.StringVar(page2b)\n        self.entry_cname_plate_var_5.set('')\n        infobox_cname_plate_entry_5 = tk.Entry(infobox_cname_plate_frame_5)\n        infobox_cname_plate_entry_5.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_plate_var_5,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_plate_entry_5.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_area_plate_frame_5 = tk.Frame(infobox_canvas_page2b_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_plate_frame_5.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_area_plate_label_5 = tk.Label(infobox_area_plate_frame_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_plate_label_5.config(bd=0, text='Area (㎡): ', font='System 6', fg='yellow')\n        infobox_area_plate_label_5.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        area_reg = page2b.register(self.area_validate)\n\n        self.entry_area_plate_var_5 = tk.DoubleVar(page2b)\n        self.entry_area_plate_var_5.set('0.0')\n        infobox_area_plate_entry_5 = tk.Entry(infobox_area_plate_frame_5)\n        infobox_area_plate_entry_5.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_area_plate_var_5,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(area_reg, \"%P\"))\n        infobox_area_plate_entry_5.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_plate_frame_5 = tk.Frame(infobox_canvas_page2b_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_plate_frame_5.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_plate_label_5 = tk.Label(infobox_quantity_plate_frame_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_plate_label_5.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_plate_label_5.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = page2b.register(self.quantity_validate)\n\n        self.entry_quantity_plate_var_5 = tk.IntVar(page2b)\n        self.entry_quantity_plate_var_5.set('1')\n        infobox_quantity_plate_entry_5 = tk.Entry(infobox_quantity_plate_frame_5)\n        infobox_quantity_plate_entry_5.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_plate_var_5,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_plate_entry_5.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n\n\n\n\n        \n        ### Condenser\n        main_frame_page2c_5 = tk.Frame(page2c, bg='gray15')\n        main_frame_page2c_5.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page2c_5 = tk.Frame(main_frame_page2c_5, bg='gray15')\n        info_canvas_title_frame_page2c_5.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page2c_5 = tk.Label(info_canvas_title_frame_page2c_5, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page2c_5.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page2c_5.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page2c_5 = tk.Canvas(info_canvas_title_frame_page2c_5, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page2c_5.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_condenser_frame_5 = tk.Frame(infobox_canvas_page2c_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_condenser_frame_5.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_condenser_label_5 = tk.Label(infobox_cname_condenser_frame_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_condenser_label_5.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_condenser_label_5.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = page2c.register(self.cname_validate)\n\n        self.entry_cname_condenser_var_5 = tk.StringVar(page2c)\n        self.entry_cname_condenser_var_5.set('')\n        infobox_cname_condenser_entry_5 = tk.Entry(infobox_cname_condenser_frame_5)\n        infobox_cname_condenser_entry_5.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_condenser_var_5,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_condenser_entry_5.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_area_condenser_frame_5 = tk.Frame(infobox_canvas_page2c_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_condenser_frame_5.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_area_condenser_label_5 = tk.Label(infobox_area_condenser_frame_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_area_condenser_label_5.config(bd=0, text='Area (㎡): ', font='System 6', fg='yellow')\n        infobox_area_condenser_label_5.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        area_reg = page2c.register(self.area_validate)\n\n        self.entry_area_condenser_var_5 = tk.DoubleVar(page2c)\n        self.entry_area_condenser_var_5.set('0.0')\n        infobox_area_condenser_entry_5 = tk.Entry(infobox_area_condenser_frame_5)\n        infobox_area_condenser_entry_5.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_area_condenser_var_5,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(area_reg, \"%P\"))\n        infobox_area_condenser_entry_5.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_condenser_frame_5 = tk.Frame(infobox_canvas_page2c_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_condenser_frame_5.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_condenser_label_5 = tk.Label(infobox_quantity_condenser_frame_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_condenser_label_5.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_condenser_label_5.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = page2c.register(self.quantity_validate)\n\n        self.entry_quantity_condenser_var_5 = tk.IntVar(page2c)\n        self.entry_quantity_condenser_var_5.set('1')\n        infobox_quantity_condenser_entry_5 = tk.Entry(infobox_quantity_condenser_frame_5)\n        infobox_quantity_condenser_entry_5.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_condenser_var_5,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_condenser_entry_5.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n        # enter information button +framE\n        enter_info_frame_page3 = tk.Frame(self.page3, bg='gray25')\n        enter_info_frame_page3.pack(side=tk.BOTTOM, anchor=tk.N, expand=True, fill=tk.X)\n\n        ### Making Enter Information Button.\n        enter_info_button_frame_page3 = tk.Frame(enter_info_frame_page3, relief=tk.GROOVE, bd=0, bg='gray15')\n        enter_info_button_frame_page3.pack(side=tk.BOTTOM)\n\n        enter_info_button_frame_page3 = tk.Label(enter_info_frame_page3, relief=tk.GROOVE, bg='gray15')\n        enter_info_button_frame_page3.config(text='Confirm Information:', font='System 6', fg='yellow')\n        enter_info_button_frame_page3.pack(pady=10)\n\n        enter_info_button_page3 = tk.Button(enter_info_frame_page3)\n        enter_info_button_page3.config(relief=tk.RAISED, bd=5, text='    Enter Information    ',\n                                 command=self.info_button_get)\n        enter_info_button_page3.pack(side=tk.BOTTOM, anchor=tk.S, pady=15, padx=15)\n\n        ### 1\n        ### PUMPS\n        main_frame_page3_1 = tk.Frame(self.page3, bg='gray15')\n        main_frame_page3_1.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page3_1 = tk.Frame(main_frame_page3_1, bg='gray15')\n        info_canvas_title_frame_page3_1.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page3_1 = tk.Label(info_canvas_title_frame_page3_1, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page3_1.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page3_1.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page3_1 = tk.Canvas(info_canvas_title_frame_page3_1, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page3_1.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_frame_page3_1 = tk.Frame(infobox_canvas_page3_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_frame_page3_1.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_label_page3_1 = tk.Label(infobox_cname_frame_page3_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_label_page3_1.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_label_page3_1.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = self.page3.register(self.cname_validate)\n\n        self.entry_cname_pump_var_1 = tk.StringVar(self.page3)\n        self.entry_cname_pump_var_1.set('')\n        infobox_cname_entry_page3_1 = tk.Entry(infobox_cname_frame_page3_1)\n        infobox_cname_entry_page3_1.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_pump_var_1,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_entry_page3_1.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Power entry field\n        infobox_power_frame_page3_1 = tk.Frame(infobox_canvas_page3_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_frame_page3_1.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_power_label_page3_1 = tk.Label(infobox_power_frame_page3_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_label_page3_1.config(bd=0, text='Power (kW): ', font='System 6', fg='yellow')\n        infobox_power_label_page3_1.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        power_reg = self.page3.register(self.power_validate)\n\n        self.entry_power_pump_var_1 = tk.DoubleVar(self.page3)\n        self.entry_power_pump_var_1.set('0.0')\n        infobox_power_entry_page3_1 = tk.Entry(infobox_power_frame_page3_1)\n        infobox_power_entry_page3_1.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_power_pump_var_1,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(power_reg, \"%P\"))\n        infobox_power_entry_page3_1.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_frame_page3_1 = tk.Frame(infobox_canvas_page3_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_frame_page3_1.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_label_page3_1 = tk.Label(infobox_quantity_frame_page3_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_label_page3_1.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_label_page3_1.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = self.page3.register(self.quantity_validate)\n\n        self.entry_quantity_pump_var_1 = tk.IntVar(self.page3)\n        self.entry_quantity_pump_var_1.set('1')\n        infobox_quantity_entry_page3_1 = tk.Entry(infobox_quantity_frame_page3_1)\n        infobox_quantity_entry_page3_1.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_pump_var_1,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_entry_page3_1.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n        ### 2\n        main_frame_page3_2 = tk.Frame(self.page3, bg='gray15')\n        main_frame_page3_2.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page3_2 = tk.Frame(main_frame_page3_2, bg='gray15')\n        info_canvas_title_frame_page3_2.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page3_2 = tk.Label(info_canvas_title_frame_page3_2, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page3_2.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page3_2.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page3_2 = tk.Canvas(info_canvas_title_frame_page3_2, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page3_2.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_frame_page3_2 = tk.Frame(infobox_canvas_page3_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_frame_page3_2.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_label_page3_2 = tk.Label(infobox_cname_frame_page3_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_label_page3_2.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_label_page3_2.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = self.page3.register(self.cname_validate)\n\n        self.entry_cname_pump_var_2 = tk.StringVar(self.page3)\n        self.entry_cname_pump_var_2.set('')\n        infobox_cname_entry_page3_2 = tk.Entry(infobox_cname_frame_page3_2)\n        infobox_cname_entry_page3_2.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_pump_var_2,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_entry_page3_2.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Power entry field\n        infobox_power_frame_page3_2 = tk.Frame(infobox_canvas_page3_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_frame_page3_2.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_power_label_page3_2 = tk.Label(infobox_power_frame_page3_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_label_page3_2.config(bd=0, text='Power (kW): ', font='System 6', fg='yellow')\n        infobox_power_label_page3_2.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        power_reg = self.page3.register(self.power_validate)\n\n        self.entry_power_pump_var_2 = tk.DoubleVar(self.page3)\n        self.entry_power_pump_var_2.set('0.0')\n        infobox_power_entry_page3_2 = tk.Entry(infobox_power_frame_page3_2)\n        infobox_power_entry_page3_2.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_power_pump_var_2,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(power_reg, \"%P\"))\n        infobox_power_entry_page3_2.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_frame_page3_2 = tk.Frame(infobox_canvas_page3_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_frame_page3_2.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_label_page3_2 = tk.Label(infobox_quantity_frame_page3_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_label_page3_2.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_label_page3_2.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = self.page3.register(self.quantity_validate)\n\n        self.entry_quantity_pump_var_2 = tk.IntVar(self.page3)\n        self.entry_quantity_pump_var_2.set('1')\n        infobox_quantity_entry_page3_2 = tk.Entry(infobox_quantity_frame_page3_2)\n        infobox_quantity_entry_page3_2.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_pump_var_2,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_entry_page3_2.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n        ### 3\n        main_frame_page3_3 = tk.Frame(self.page3, bg='gray15')\n        main_frame_page3_3.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page3_3 = tk.Frame(main_frame_page3_3, bg='gray15')\n        info_canvas_title_frame_page3_3.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page3_3 = tk.Label(info_canvas_title_frame_page3_3, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page3_3.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page3_3.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page3_3 = tk.Canvas(info_canvas_title_frame_page3_3, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page3_3.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_frame_page3_3 = tk.Frame(infobox_canvas_page3_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_frame_page3_3.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_label_page3_3 = tk.Label(infobox_cname_frame_page3_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_label_page3_3.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_label_page3_3.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = self.page3.register(self.cname_validate)\n\n        self.entry_cname_pump_var_3 = tk.StringVar(self.page3)\n        self.entry_cname_pump_var_3.set('')\n        infobox_cname_entry_page3_3 = tk.Entry(infobox_cname_frame_page3_3)\n        infobox_cname_entry_page3_3.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_pump_var_3,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_entry_page3_3.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Power entry field\n        infobox_power_frame_page3_3 = tk.Frame(infobox_canvas_page3_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_frame_page3_3.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_power_label_page3_3 = tk.Label(infobox_power_frame_page3_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_label_page3_3.config(bd=0, text='Power (kW): ', font='System 6', fg='yellow')\n        infobox_power_label_page3_3.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        power_reg = self.page3.register(self.power_validate)\n\n        self.entry_power_pump_var_3 = tk.DoubleVar(self.page3)\n        self.entry_power_pump_var_3.set('0.0')\n        infobox_power_entry_page3_3 = tk.Entry(infobox_power_frame_page3_3)\n        infobox_power_entry_page3_3.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_power_pump_var_3,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(power_reg, \"%P\"))\n        infobox_power_entry_page3_3.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_frame_page3_3 = tk.Frame(infobox_canvas_page3_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_frame_page3_3.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_label_page3_3 = tk.Label(infobox_quantity_frame_page3_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_label_page3_3.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_label_page3_3.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = self.page3.register(self.quantity_validate)\n\n        self.entry_quantity_pump_var_3 = tk.IntVar(self.page3)\n        self.entry_quantity_pump_var_3.set('1')\n        infobox_quantity_entry_page3_3 = tk.Entry(infobox_quantity_frame_page3_3)\n        infobox_quantity_entry_page3_3.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_pump_var_3,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_entry_page3_3.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n        ### 4\n        main_frame_page3_4 = tk.Frame(self.page3, bg='gray15')\n        main_frame_page3_4.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page3_4 = tk.Frame(main_frame_page3_4, bg='gray15')\n        info_canvas_title_frame_page3_4.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page3_4 = tk.Label(info_canvas_title_frame_page3_4, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page3_4.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page3_4.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page3_4 = tk.Canvas(info_canvas_title_frame_page3_4, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page3_4.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_frame_page3_4 = tk.Frame(infobox_canvas_page3_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_frame_page3_4.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_label_page3_4 = tk.Label(infobox_cname_frame_page3_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_label_page3_4.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_label_page3_4.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = self.page3.register(self.cname_validate)\n\n        self.entry_cname_pump_var_4 = tk.StringVar(self.page3)\n        self.entry_cname_pump_var_4.set('')\n        infobox_cname_entry_page3_4 = tk.Entry(infobox_cname_frame_page3_4)\n        infobox_cname_entry_page3_4.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_pump_var_4,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_entry_page3_4.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Power entry field\n        infobox_power_frame_page3_4 = tk.Frame(infobox_canvas_page3_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_frame_page3_4.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_power_label_page3_4 = tk.Label(infobox_power_frame_page3_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_label_page3_4.config(bd=0, text='Power (kW): ', font='System 6', fg='yellow')\n        infobox_power_label_page3_4.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        power_reg = self.page3.register(self.power_validate)\n\n        self.entry_power_pump_var_4 = tk.DoubleVar(self.page3)\n        self.entry_power_pump_var_4.set('0.0')\n        infobox_power_entry_page3_4 = tk.Entry(infobox_power_frame_page3_4)\n        infobox_power_entry_page3_4.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_power_pump_var_4,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(power_reg, \"%P\"))\n        infobox_power_entry_page3_4.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_frame_page3_4 = tk.Frame(infobox_canvas_page3_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_frame_page3_4.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_label_page3_4 = tk.Label(infobox_quantity_frame_page3_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_label_page3_4.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_label_page3_4.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = self.page3.register(self.quantity_validate)\n\n        self.entry_quantity_pump_var_4 = tk.IntVar(self.page3)\n        self.entry_quantity_pump_var_4.set('1')\n        infobox_quantity_entry_page3_4 = tk.Entry(infobox_quantity_frame_page3_4)\n        infobox_quantity_entry_page3_4.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_pump_var_4,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_entry_page3_4.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n\n\n        ### 5\n        main_frame_page3_5 = tk.Frame(self.page3, bg='gray15')\n        main_frame_page3_5.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page3_5 = tk.Frame(main_frame_page3_5, bg='gray15')\n        info_canvas_title_frame_page3_5.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page3_5 = tk.Label(info_canvas_title_frame_page3_5, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page3_5.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page3_5.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page3_5 = tk.Canvas(info_canvas_title_frame_page3_5, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page3_5.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_frame_page3_5 = tk.Frame(infobox_canvas_page3_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_frame_page3_5.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_label_page3_5 = tk.Label(infobox_cname_frame_page3_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_label_page3_5.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_label_page3_5.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = self.page3.register(self.cname_validate)\n\n        self.entry_cname_pump_var_5 = tk.StringVar(self.page3)\n        self.entry_cname_pump_var_5.set('')\n        infobox_cname_entry_page3_5 = tk.Entry(infobox_cname_frame_page3_5)\n        infobox_cname_entry_page3_5.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_pump_var_5,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_entry_page3_5.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Power entry field\n        infobox_power_frame_page3_5 = tk.Frame(infobox_canvas_page3_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_frame_page3_5.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_power_label_page3_5 = tk.Label(infobox_power_frame_page3_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_label_page3_5.config(bd=0, text='Power (kW): ', font='System 6', fg='yellow')\n        infobox_power_label_page3_5.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        power_reg = self.page3.register(self.power_validate)\n\n        self.entry_power_pump_var_5 = tk.DoubleVar(self.page3)\n        self.entry_power_pump_var_5.set('0.0')\n        infobox_power_entry_page3_5 = tk.Entry(infobox_power_frame_page3_5)\n        infobox_power_entry_page3_5.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_power_pump_var_5,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(power_reg, \"%P\"))\n        infobox_power_entry_page3_5.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_frame_page3_5 = tk.Frame(infobox_canvas_page3_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_frame_page3_5.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_label_page3_5 = tk.Label(infobox_quantity_frame_page3_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_label_page3_5.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_label_page3_5.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = self.page3.register(self.quantity_validate)\n\n        self.entry_quantity_pump_var_5 = tk.IntVar(self.page3)\n        self.entry_quantity_pump_var_5.set('1')\n        infobox_quantity_entry_page3_5 = tk.Entry(infobox_quantity_frame_page3_5)\n        infobox_quantity_entry_page3_5.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_pump_var_5,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_entry_page3_5.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n        # enter information button +framE\n        enter_info_frame_page4 = tk.Frame(self.page4, bg='gray25')\n        enter_info_frame_page4.pack(side=tk.BOTTOM, anchor=tk.N, expand=True, fill=tk.X)\n\n        ### Making Enter Information Button.\n        enter_info_button_frame_page4 = tk.Frame(enter_info_frame_page4, relief=tk.GROOVE, bd=0, bg='gray15')\n        enter_info_button_frame_page4.pack(side=tk.BOTTOM)\n\n        enter_info_button_frame_page4 = tk.Label(enter_info_frame_page4, relief=tk.GROOVE, bg='gray15')\n        enter_info_button_frame_page4.config(text='Confirm Information:', font='System 6', fg='yellow')\n        enter_info_button_frame_page4.pack(pady=10)\n\n        enter_info_button_page4 = tk.Button(enter_info_frame_page4)\n        enter_info_button_page4.config(relief=tk.RAISED, bd=5, text='    Enter Information    ',\n                                 command=self.info_button_get)\n        enter_info_button_page4.pack(side=tk.BOTTOM, anchor=tk.S, pady=15, padx=15)\n\n        ### 1\n        ### EXPANDERS GUI\n        main_frame_page3_1 = tk.Frame(self.page4, bg='gray15')\n        main_frame_page3_1.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page3_1 = tk.Frame(main_frame_page3_1, bg='gray15')\n        info_canvas_title_frame_page3_1.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page3_1 = tk.Label(info_canvas_title_frame_page3_1, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page3_1.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page3_1.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page3_1 = tk.Canvas(info_canvas_title_frame_page3_1, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page3_1.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_expander_frame_1 = tk.Frame(infobox_canvas_page3_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_expander_frame_1.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_expander_label_1 = tk.Label(infobox_cname_expander_frame_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_expander_label_1.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_expander_label_1.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = self.page4.register(self.cname_validate)\n\n        self.entry_cname_expander_var_1 = tk.StringVar(self.page4)\n        self.entry_cname_expander_var_1.set('')\n        infobox_cname_expander_entry_1 = tk.Entry(infobox_cname_expander_frame_1)\n        infobox_cname_expander_entry_1.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_expander_var_1,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_expander_entry_1.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_power_expander_frame_1 = tk.Frame(infobox_canvas_page3_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_expander_frame_1.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_power_expander_label_1 = tk.Label(infobox_power_expander_frame_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_expander_label_1.config(bd=0, text='Power (kW): ', font='System 6', fg='yellow')\n        infobox_power_expander_label_1.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        power_reg = self.page4.register(self.power_validate)\n\n        self.entry_power_expander_var_1 = tk.DoubleVar(self.page4)\n        self.entry_power_expander_var_1.set('0.0')\n        infobox_power_entry_1 = tk.Entry(infobox_power_expander_frame_1)\n        infobox_power_entry_1.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_power_expander_var_1,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(power_reg, \"%P\"))\n        infobox_power_entry_1.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_expander_frame_1 = tk.Frame(infobox_canvas_page3_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_expander_frame_1.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_expander_label_1 = tk.Label(infobox_quantity_expander_frame_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_expander_label_1.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_expander_label_1.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = self.page4.register(self.quantity_validate)\n\n        self.entry_quantity_expander_var_1 = tk.IntVar(self.page4)\n        self.entry_quantity_expander_var_1.set('1')\n        infobox_quantity_expander_entry_1 = tk.Entry(infobox_quantity_expander_frame_1)\n        infobox_quantity_expander_entry_1.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_expander_var_1,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_expander_entry_1.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n        ### 2\n        ### EXPANDERS GUI\n        main_frame_page3_2 = tk.Frame(self.page4, bg='gray15')\n        main_frame_page3_2.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page3_2 = tk.Frame(main_frame_page3_2, bg='gray15')\n        info_canvas_title_frame_page3_2.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page3_2 = tk.Label(info_canvas_title_frame_page3_2, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page3_2.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page3_2.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page3_2 = tk.Canvas(info_canvas_title_frame_page3_2, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page3_2.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_expander_frame_2 = tk.Frame(infobox_canvas_page3_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_expander_frame_2.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_expander_label_2 = tk.Label(infobox_cname_expander_frame_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_expander_label_2.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_expander_label_2.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = self.page4.register(self.cname_validate)\n\n        self.entry_cname_expander_var_2 = tk.StringVar(self.page4)\n        self.entry_cname_expander_var_2.set('')\n        infobox_cname_expander_entry_2 = tk.Entry(infobox_cname_expander_frame_2)\n        infobox_cname_expander_entry_2.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_expander_var_2,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_expander_entry_2.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_power_expander_frame_2 = tk.Frame(infobox_canvas_page3_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_expander_frame_2.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_power_expander_label_2 = tk.Label(infobox_power_expander_frame_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_expander_label_2.config(bd=0, text='Power (kW): ', font='System 6', fg='yellow')\n        infobox_power_expander_label_2.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        power_reg = self.page4.register(self.power_validate)\n\n        self.entry_power_expander_var_2 = tk.DoubleVar(self.page4)\n        self.entry_power_expander_var_2.set('0.0')\n        infobox_power_entry_2 = tk.Entry(infobox_power_expander_frame_2)\n        infobox_power_entry_2.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_power_expander_var_2,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(power_reg, \"%P\"))\n        infobox_power_entry_2.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_expander_frame_2 = tk.Frame(infobox_canvas_page3_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_expander_frame_2.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_expander_label_2 = tk.Label(infobox_quantity_expander_frame_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_expander_label_2.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_expander_label_2.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = self.page4.register(self.quantity_validate)\n\n        self.entry_quantity_expander_var_2 = tk.IntVar(self.page4)\n        self.entry_quantity_expander_var_2.set('1')\n        infobox_quantity_expander_entry_2 = tk.Entry(infobox_quantity_expander_frame_2)\n        infobox_quantity_expander_entry_2.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_expander_var_2,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_expander_entry_2.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n        ### 3\n        ### EXPANDERS GUI\n        main_frame_page3_3 = tk.Frame(self.page4, bg='gray15')\n        main_frame_page3_3.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page3_3 = tk.Frame(main_frame_page3_3, bg='gray15')\n        info_canvas_title_frame_page3_3.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page3_3 = tk.Label(info_canvas_title_frame_page3_3, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page3_3.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page3_3.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page3_3 = tk.Canvas(info_canvas_title_frame_page3_3, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page3_3.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_expander_frame_3 = tk.Frame(infobox_canvas_page3_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_expander_frame_3.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_expander_label_3 = tk.Label(infobox_cname_expander_frame_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_expander_label_3.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_expander_label_3.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = self.page4.register(self.cname_validate)\n\n        self.entry_cname_expander_var_3 = tk.StringVar(self.page4)\n        self.entry_cname_expander_var_3.set('')\n        infobox_cname_expander_entry_3 = tk.Entry(infobox_cname_expander_frame_3)\n        infobox_cname_expander_entry_3.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_expander_var_3,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_expander_entry_3.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_power_expander_frame_3 = tk.Frame(infobox_canvas_page3_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_expander_frame_3.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_power_expander_label_3 = tk.Label(infobox_power_expander_frame_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_expander_label_3.config(bd=0, text='Power (kW): ', font='System 6', fg='yellow')\n        infobox_power_expander_label_3.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        power_reg = self.page4.register(self.power_validate)\n\n        self.entry_power_expander_var_3 = tk.DoubleVar(self.page4)\n        self.entry_power_expander_var_3.set('0.0')\n        infobox_power_entry_3 = tk.Entry(infobox_power_expander_frame_3)\n        infobox_power_entry_3.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_power_expander_var_3,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(power_reg, \"%P\"))\n        infobox_power_entry_3.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_expander_frame_3 = tk.Frame(infobox_canvas_page3_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_expander_frame_3.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_expander_label_3 = tk.Label(infobox_quantity_expander_frame_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_expander_label_3.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_expander_label_3.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = self.page4.register(self.quantity_validate)\n\n        self.entry_quantity_expander_var_3 = tk.IntVar(self.page4)\n        self.entry_quantity_expander_var_3.set('1')\n        infobox_quantity_expander_entry_3 = tk.Entry(infobox_quantity_expander_frame_3)\n        infobox_quantity_expander_entry_3.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_expander_var_3,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_expander_entry_3.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n        ### 4\n        ### EXPANDERS GUI\n        main_frame_page3_4 = tk.Frame(self.page4, bg='gray15')\n        main_frame_page3_4.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page3_4 = tk.Frame(main_frame_page3_4, bg='gray15')\n        info_canvas_title_frame_page3_4.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page3_4 = tk.Label(info_canvas_title_frame_page3_4, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page3_4.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page3_4.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page3_4 = tk.Canvas(info_canvas_title_frame_page3_4, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page3_4.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_expander_frame_4 = tk.Frame(infobox_canvas_page3_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_expander_frame_4.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_expander_label_4 = tk.Label(infobox_cname_expander_frame_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_expander_label_4.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_expander_label_4.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = self.page4.register(self.cname_validate)\n\n        self.entry_cname_expander_var_4 = tk.StringVar(self.page4)\n        self.entry_cname_expander_var_4.set('')\n        infobox_cname_expander_entry_4 = tk.Entry(infobox_cname_expander_frame_4)\n        infobox_cname_expander_entry_4.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_expander_var_4,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_expander_entry_4.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_power_expander_frame_4 = tk.Frame(infobox_canvas_page3_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_expander_frame_4.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_power_expander_label_4 = tk.Label(infobox_power_expander_frame_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_expander_label_4.config(bd=0, text='Power (kW): ', font='System 6', fg='yellow')\n        infobox_power_expander_label_4.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        power_reg = self.page4.register(self.power_validate)\n\n        self.entry_power_expander_var_4 = tk.DoubleVar(self.page4)\n        self.entry_power_expander_var_4.set('0.0')\n        infobox_power_entry_4 = tk.Entry(infobox_power_expander_frame_4)\n        infobox_power_entry_4.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_power_expander_var_4,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(power_reg, \"%P\"))\n        infobox_power_entry_4.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_expander_frame_4 = tk.Frame(infobox_canvas_page3_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_expander_frame_4.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_expander_label_4 = tk.Label(infobox_quantity_expander_frame_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_expander_label_4.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_expander_label_4.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = self.page4.register(self.quantity_validate)\n\n        self.entry_quantity_expander_var_4 = tk.IntVar(self.page4)\n        self.entry_quantity_expander_var_4.set('1')\n        infobox_quantity_expander_frame_4 = tk.Entry(infobox_quantity_expander_frame_4)\n        infobox_quantity_expander_frame_4.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_expander_var_4,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_expander_frame_4.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n        \n\n\n\n        ### 5\n        ### EXPANDERS GUI\n        main_frame_page3_5 = tk.Frame(self.page4, bg='gray15')\n        main_frame_page3_5.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page3_5 = tk.Frame(main_frame_page3_5, bg='gray15')\n        info_canvas_title_frame_page3_5.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page3_5 = tk.Label(info_canvas_title_frame_page3_5, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page3_5.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page3_5.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page3_5 = tk.Canvas(info_canvas_title_frame_page3_5, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page3_5.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_expander_frame_5 = tk.Frame(infobox_canvas_page3_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_expander_frame_5.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_expander_label_5 = tk.Label(infobox_cname_expander_frame_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_expander_label_5.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_expander_label_5.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = self.page4.register(self.cname_validate)\n\n        self.entry_cname_expander_var_5 = tk.StringVar(self.page4)\n        self.entry_cname_expander_var_5.set('')\n        infobox_cname_expander_entry_5 = tk.Entry(infobox_cname_expander_frame_5)\n        infobox_cname_expander_entry_5.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_expander_var_5,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_expander_entry_5.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_power_expander_frame_5 = tk.Frame(infobox_canvas_page3_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_expander_frame_5.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_power_expander_label_5 = tk.Label(infobox_power_expander_frame_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_power_expander_label_5.config(bd=0, text='Power (kW): ', font='System 6', fg='yellow')\n        infobox_power_expander_label_5.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        power_reg = self.page4.register(self.power_validate)\n\n        self.entry_power_expander_var_5 = tk.DoubleVar(self.page4)\n        self.entry_power_expander_var_5.set('0.0')\n        infobox_power_entry_5 = tk.Entry(infobox_power_expander_frame_5)\n        infobox_power_entry_5.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_power_expander_var_5,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(power_reg, \"%P\"))\n        infobox_power_entry_5.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_expander_frame_5 = tk.Frame(infobox_canvas_page3_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_expander_frame_5.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_expander_label_5 = tk.Label(infobox_quantity_expander_frame_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_expander_label_5.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_expander_label_5.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = self.page4.register(self.quantity_validate)\n\n        self.entry_quantity_expander_var_5 = tk.IntVar(self.page4)\n        self.entry_quantity_expander_var_5.set('1')\n        infobox_quantity_expander_frame_5 = tk.Entry(infobox_quantity_expander_frame_5)\n        infobox_quantity_expander_frame_5.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_expander_var_5,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_expander_frame_5.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n        # enter information button +framE\n        enter_info_frame_page5 = tk.Frame(self.page5, bg='gray25')\n        enter_info_frame_page5.pack(side=tk.BOTTOM, anchor=tk.N, expand=True, fill=tk.X)\n\n        ### Making Enter Information Button.\n        enter_info_button_frame_page5 = tk.Frame(enter_info_frame_page5, relief=tk.GROOVE, bd=0, bg='gray15')\n        enter_info_button_frame_page5.pack(side=tk.BOTTOM)\n\n        enter_info_button_frame_page5 = tk.Label(enter_info_frame_page5, relief=tk.GROOVE, bg='gray15')\n        enter_info_button_frame_page5.config(text='Confirm Information:', font='System 6', fg='yellow')\n        enter_info_button_frame_page5.pack(pady=10)\n\n        enter_info_button_page5 = tk.Button(enter_info_frame_page5)\n        enter_info_button_page5.config(relief=tk.RAISED, bd=5, text='    Enter Information    ',\n                                 command=self.info_button_get)\n        enter_info_button_page5.pack(side=tk.BOTTOM, anchor=tk.S, pady=15, padx=15)\n\n\n\n        ### 1\n        ### STORAGE TANKS GUI\n        main_frame_page4_1 = tk.Frame(self.page5, bg='gray15')\n        main_frame_page4_1.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page4_1 = tk.Frame(main_frame_page4_1, bg='gray15')\n        info_canvas_title_frame_page4_1.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page4_1 = tk.Label(info_canvas_title_frame_page4_1, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page4_1.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page4_1.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page4_1 = tk.Canvas(info_canvas_title_frame_page4_1, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page4_1.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_st_frame_1 = tk.Frame(infobox_canvas_page4_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_st_frame_1.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_st_label_1 = tk.Label(infobox_cname_st_frame_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_st_label_1.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_st_label_1.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = self.page5.register(self.cname_validate)\n\n        self.entry_cname_st_var_1 = tk.StringVar(self.page5)\n        self.entry_cname_st_var_1.set('')\n        infobox_cname_st_entry_1 = tk.Entry(infobox_cname_st_frame_1)\n        infobox_cname_st_entry_1.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_st_var_1,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_st_entry_1.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_volume_st_frame_1 = tk.Frame(infobox_canvas_page4_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_volume_st_frame_1.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_volume_st_label_1 = tk.Label(infobox_volume_st_frame_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_volume_st_label_1.config(bd=0, text='Volume (L): ', font='System 6', fg='yellow')\n        infobox_volume_st_label_1.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        volume_reg = self.page5.register(self.volume_validate)\n\n        self.entry_volume_st_var_1 = tk.DoubleVar(self.page5)\n        self.entry_volume_st_var_1.set('0.0')\n        infobox_volume_st_entry_1 = tk.Entry(infobox_volume_st_frame_1)\n        infobox_volume_st_entry_1.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_volume_st_var_1,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(volume_reg, \"%P\"))\n        infobox_volume_st_entry_1.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_st_frame_1 = tk.Frame(infobox_canvas_page4_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_st_frame_1.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_st_label_1 = tk.Label(infobox_quantity_st_frame_1, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_st_label_1.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_st_label_1.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = self.page5.register(self.quantity_validate)\n\n        self.entry_quantity_st_var_1 = tk.IntVar(self.page5)\n        self.entry_quantity_st_var_1.set('1')\n        infobox_quantity_st_entry_1 = tk.Entry(infobox_quantity_st_frame_1)\n        infobox_quantity_st_entry_1.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_st_var_1,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_st_entry_1.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n        ### 2\n        ### STORAGE TANKS GUI\n        main_frame_page4_2 = tk.Frame(self.page5, bg='gray15')\n        main_frame_page4_2.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page4_2 = tk.Frame(main_frame_page4_2, bg='gray15')\n        info_canvas_title_frame_page4_2.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page4_2 = tk.Label(info_canvas_title_frame_page4_2, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page4_2.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page4_2.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page4_2 = tk.Canvas(info_canvas_title_frame_page4_2, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page4_2.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_st_frame_2 = tk.Frame(infobox_canvas_page4_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_st_frame_2.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_st_label_2 = tk.Label(infobox_cname_st_frame_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_st_label_2.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_st_label_2.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = self.page5.register(self.cname_validate)\n\n        self.entry_cname_st_var_2 = tk.StringVar(self.page5)\n        self.entry_cname_st_var_2.set('')\n        infobox_cname_st_entry_2 = tk.Entry(infobox_cname_st_frame_2)\n        infobox_cname_st_entry_2.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_st_var_2,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_st_entry_2.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_volume_st_frame_2 = tk.Frame(infobox_canvas_page4_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_volume_st_frame_2.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_volume_st_label_2 = tk.Label(infobox_volume_st_frame_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_volume_st_label_2.config(bd=0, text='Volume (L): ', font='System 6', fg='yellow')\n        infobox_volume_st_label_2.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        volume_reg = self.page5.register(self.volume_validate)\n\n        self.entry_volume_st_var_2 = tk.DoubleVar(self.page5)\n        self.entry_volume_st_var_2.set('0.0')\n        infobox_volume_st_entry_2 = tk.Entry(infobox_volume_st_frame_2)\n        infobox_volume_st_entry_2.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_volume_st_var_2,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(volume_reg, \"%P\"))\n        infobox_volume_st_entry_2.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_st_frame_2 = tk.Frame(infobox_canvas_page4_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_st_frame_2.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_st_label_2 = tk.Label(infobox_quantity_st_frame_2, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_st_label_2.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_st_label_2.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = self.page5.register(self.quantity_validate)\n\n        self.entry_quantity_st_var_2 = tk.IntVar(self.page5)\n        self.entry_quantity_st_var_2.set('1')\n        infobox_quantity_st_entry_2 = tk.Entry(infobox_quantity_st_frame_2)\n        infobox_quantity_st_entry_2.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_st_var_2,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_st_entry_2.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n        ### 3\n        ### STORAGE TANKS GUI\n        main_frame_page4_3 = tk.Frame(self.page5, bg='gray15')\n        main_frame_page4_3.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page4_3 = tk.Frame(main_frame_page4_3, bg='gray15')\n        info_canvas_title_frame_page4_3.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page4_3 = tk.Label(info_canvas_title_frame_page4_3, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page4_3.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page4_3.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page4_3 = tk.Canvas(info_canvas_title_frame_page4_3, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page4_3.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_st_frame_3 = tk.Frame(infobox_canvas_page4_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_st_frame_3.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_st_label_3 = tk.Label(infobox_cname_st_frame_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_st_label_3.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_st_label_3.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = self.page5.register(self.cname_validate)\n\n        self.entry_cname_st_var_3 = tk.StringVar(self.page5)\n        self.entry_cname_st_var_3.set('')\n        infobox_cname_st_entry_3 = tk.Entry(infobox_cname_st_frame_3)\n        infobox_cname_st_entry_3.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_st_var_3,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_st_entry_3.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_volume_st_frame_3 = tk.Frame(infobox_canvas_page4_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_volume_st_frame_3.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_volume_st_label_3 = tk.Label(infobox_volume_st_frame_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_volume_st_label_3.config(bd=0, text='Volume (L): ', font='System 6', fg='yellow')\n        infobox_volume_st_label_3.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        volume_reg = self.page5.register(self.volume_validate)\n\n        self.entry_volume_st_var_3 = tk.DoubleVar(self.page5)\n        self.entry_volume_st_var_3.set('0.0')\n        infobox_volume_st_entry_3 = tk.Entry(infobox_volume_st_frame_3)\n        infobox_volume_st_entry_3.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_volume_st_var_3,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(volume_reg, \"%P\"))\n        infobox_volume_st_entry_3.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_st_frame_3 = tk.Frame(infobox_canvas_page4_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_st_frame_3.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_st_label_3 = tk.Label(infobox_quantity_st_frame_3, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_st_label_3.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_st_label_3.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = self.page5.register(self.quantity_validate)\n\n        self.entry_quantity_st_var_3 = tk.IntVar(self.page5)\n        self.entry_quantity_st_var_3.set('1')\n        infobox_quantity_st_entry_3 = tk.Entry(infobox_quantity_st_frame_3)\n        infobox_quantity_st_entry_3.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_st_var_3,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_st_entry_3.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n        ### 4\n        ### STORAGE TANKS GUI\n        main_frame_page4_4 = tk.Frame(self.page5, bg='gray15')\n        main_frame_page4_4.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page4_4 = tk.Frame(main_frame_page4_4, bg='gray15')\n        info_canvas_title_frame_page4_4.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page4_4 = tk.Label(info_canvas_title_frame_page4_4, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page4_4.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page4_4.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page4_4 = tk.Canvas(info_canvas_title_frame_page4_4, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page4_4.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_st_frame_4 = tk.Frame(infobox_canvas_page4_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_st_frame_4.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_st_label_4 = tk.Label(infobox_cname_st_frame_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_st_label_4.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_st_label_4.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = self.page5.register(self.cname_validate)\n\n        self.entry_cname_st_var_4 = tk.StringVar(self.page5)\n        self.entry_cname_st_var_4.set('')\n        infobox_cname_st_entry_4 = tk.Entry(infobox_cname_st_frame_4)\n        infobox_cname_st_entry_4.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_st_var_4,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_st_entry_4.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_volume_st_frame_4 = tk.Frame(infobox_canvas_page4_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_volume_st_frame_4.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_volume_st_label_4 = tk.Label(infobox_volume_st_frame_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_volume_st_label_4.config(bd=0, text='Volume (L): ', font='System 6', fg='yellow')\n        infobox_volume_st_label_4.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        volume_reg = self.page5.register(self.volume_validate)\n\n        self.entry_volume_st_var_4 = tk.DoubleVar(self.page5)\n        self.entry_volume_st_var_4.set('0.0')\n        infobox_volume_st_entry_4 = tk.Entry(infobox_volume_st_frame_4)\n        infobox_volume_st_entry_4.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_volume_st_var_4,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(volume_reg, \"%P\"))\n        infobox_volume_st_entry_4.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_st_frame_4 = tk.Frame(infobox_canvas_page4_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_st_frame_4.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_st_label_4 = tk.Label(infobox_quantity_st_frame_4, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_st_label_4.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_st_label_4.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = self.page5.register(self.quantity_validate)\n\n        self.entry_quantity_st_var_4 = tk.IntVar(self.page5)\n        self.entry_quantity_st_var_4.set('1')\n        infobox_quantity_st_entry_4 = tk.Entry(infobox_quantity_st_frame_4)\n        infobox_quantity_st_entry_4.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_st_var_4,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_st_entry_4.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n\n        ### 5\n        ### STORAGE TANKS GUI\n        main_frame_page4_5 = tk.Frame(self.page5, bg='gray15')\n        main_frame_page4_5.pack(side=tk.LEFT, anchor=tk.N, padx=35, pady=10)\n\n        info_canvas_title_frame_page4_5 = tk.Frame(main_frame_page4_5, bg='gray15')\n        info_canvas_title_frame_page4_5.pack(side=tk.LEFT, anchor=tk.N, padx=10, pady=10)\n\n        info_canvas_title_label_page4_5 = tk.Label(info_canvas_title_frame_page4_5, relief=tk.GROOVE, borderwidth=1,\n                                                bg='gray15')\n        info_canvas_title_label_page4_5.config(bd=0, text='Component Information', font='System 12', fg='yellow')\n        info_canvas_title_label_page4_5.pack(fill=tk.X, anchor=tk.N)\n\n        \n        infobox_canvas_page4_5 = tk.Canvas(info_canvas_title_frame_page4_5, width=200, height=200, relief=tk.RIDGE, bd=1,\n                                        bg='gray15')\n        infobox_canvas_page4_5.pack(side=tk.TOP, anchor=tk.NW, padx=15, pady=15)\n\n        # Component Name entry field\n        infobox_cname_st_frame_5 = tk.Frame(infobox_canvas_page4_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_st_frame_5.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_cname_st_label_5 = tk.Label(infobox_cname_st_frame_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_cname_st_label_5.config(bd=0, text='Name: ', font='System 6', fg='yellow')\n        infobox_cname_st_label_5.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        cname_reg = self.page5.register(self.cname_validate)\n\n        self.entry_cname_st_var_5 = tk.StringVar(self.page5)\n        self.entry_cname_st_var_5.set('')\n        infobox_cname_st_entry_5 = tk.Entry(infobox_cname_st_frame_5)\n        infobox_cname_st_entry_5.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_cname_st_var_5,\n                                        font='System 6', fg='yellow', validate=\"key\", validatecommand=(cname_reg, '%P'))\n        infobox_cname_st_entry_5.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Component Area entry field\n        infobox_volume_st_frame_5 = tk.Frame(infobox_canvas_page4_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_volume_st_frame_5.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_volume_st_label_5 = tk.Label(infobox_volume_st_frame_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_volume_st_label_5.config(bd=0, text='Volume (L): ', font='System 6', fg='yellow')\n        infobox_volume_st_label_5.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        volume_reg = self.page5.register(self.volume_validate)\n\n        self.entry_volume_st_var_5 = tk.DoubleVar(self.page5)\n        self.entry_volume_st_var_5.set('0.0')\n        infobox_volume_st_entry_5 = tk.Entry(infobox_volume_st_frame_5)\n        infobox_volume_st_entry_5.config(bd=1, relief=tk.GROOVE, bg='gray15', textvariable=self.entry_volume_st_var_5,\n                                          font='System 6', fg='yellow', validate=\"key\",\n                                          validatecommand=(volume_reg, \"%P\"))\n        infobox_volume_st_entry_5.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n        # Quantity entry field\n        infobox_quantity_st_frame_5 = tk.Frame(infobox_canvas_page4_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_st_frame_5.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n        infobox_quantity_st_label_5 = tk.Label(infobox_quantity_st_frame_5, relief=tk.FLAT, bd=0, bg='gray15')\n        infobox_quantity_st_label_5.config(bd=0, text='Quantity: ', font='System 6', fg='yellow')\n        infobox_quantity_st_label_5.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n        quantity_reg = self.page5.register(self.quantity_validate)\n\n        self.entry_quantity_st_var_5 = tk.IntVar(self.page5)\n        self.entry_quantity_st_var_5.set('1')\n        infobox_quantity_st_entry_5 = tk.Entry(infobox_quantity_st_frame_5)\n        infobox_quantity_st_entry_5.config(bd=1, relief=tk.GROOVE, bg='gray15',\n                                              textvariable=self.entry_quantity_st_var_5,\n                                              font='System 6', fg='yellow', validate=\"key\",\n                                              validatecommand=(quantity_reg, \"%P\"))\n        infobox_quantity_st_entry_5.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n\n\n\n        \n        ### RESULTS PAGE\n        \n        treeview_frame = tk.Frame(self.page6, relief=tk.GROOVE, bd=0, bg='gray15')\n        treeview_frame.pack(side=tk.TOP, padx=10, pady=10)\n\n        treeview_label = tk.Label(treeview_frame, relief=tk.GROOVE, bg='gray15')\n        treeview_label.config(text='Components Submitted', font='System 6', fg='yellow')\n        treeview_label.pack(side=tk.TOP, padx=10, pady=10)\n\n        # Create the columns necessary to display the database in the GUI as a table.\n        self.columns = ('Type', 'Name', 'Area/Power/Volume', 'Quantity', 'Individual Cost', 'Quantity x Individual Cost')\n        self.treeview = ttk.Treeview(treeview_frame, columns=self.columns, show='headings')\n        # Makes the column titles\n        self.treeview.column('Type', width=250)\n        self.treeview.column('Name', width=100)\n        self.treeview.column('Area/Power/Volume', width=200)\n        self.treeview.column('Quantity', width=100)\n        self.treeview.column('Individual Cost', width=100)\n        self.treeview.column('Quantity x Individual Cost', width=250)\n        \n\n        for i in range(len(self.total_comp_names)):\n            try:\n                self.treeview.insert('', tk.END,\n                                     values=(self.total_comp_types[i], self.total_comp_names[i], self.total_comp_values[i], self.total_comp_quantities[i],\n                                             self.total_comp_individual_costs[i], self.total_comp_quantity_cost[i]))\n                i += 1\n            except IndexError:\n                # Insert an empty string if this error is caught\n                self.treeview.insert('', tk.END, values=('', '', '', '', '', '', '', '', ''))\n                i += 1\n            self.treeview.pack(pady=2, padx=2)\n        # For every column in the columns list, make the column able to be\n        # sorted alphabetically or numerically by calling the\n        # treeview_sort_column function for every column each time the column\n        # heading is pressed.\n        for col in self.columns:\n            self.treeview.heading(col, text=col,\n                                  command=lambda c=col: self.treeview_sort_column(self.treeview, c, False))\n\n\n        results_frame = tk.Frame(self.page6)\n        results_frame.pack(expand=True, fill=tk.X)\n\n        results_label = tk.Label(results_frame, relief=tk.GROOVE, bg='gray15')\n        results_label.config(text='Calculate System Total', font='System 6', fg='yellow')\n        results_label.pack(pady=10)\n\n        results_button = tk.Button(results_frame)\n        results_button.config(relief=tk.RAISED, bd=5, text='    Calculate    ',\n                                 command=self.total_cost_calculate)\n        results_button.pack(side=tk.BOTTOM, anchor=tk.S, pady=15, padx=15)\n\n        self.results_label = tk.Label(results_frame, bg='gray15')\n        self.results_label.config(bd=0, text='Total System Cost: £{}'.format(self.total_system_cost), font='System 6', fg='yellow')\n        self.results_label.pack()\n\n\n        ### HELP PAGE  \n\n    ### Treeview sorting algorithm\n    def treeview_sort_column(self, tv, col, reverse):\n        l = [(tv.set(k, col), k) for k in tv.get_children('')]\n        try:\n            l.sort(key=lambda t: int(t[0]), reverse=reverse)\n        except ValueError:\n            l.sort(reverse=reverse)\n        # rearrange items in sorted positions\n        for index, (val, k) in enumerate(l):\n            tv.move(k, '', index)\n\n        # reverse sort next time\n        tv.heading(col, command=lambda: \\\n            self.treeview_sort_column(tv, col, not reverse))\n        \n    def info_button_get(self):\n        #FETCH ALL VALUES\n        ### Turbines\n        turbine_type = 'Turbine'\n        # Turbines Names\n        turbine_name_1 = self.entry_cname_turb_var_1.get()\n        turbine_name_2 = self.entry_cname_turb_var_2.get()\n        turbine_name_3 = self.entry_cname_turb_var_3.get()\n        turbine_name_4 = self.entry_cname_turb_var_4.get()\n        turbine_name_5 = self.entry_cname_turb_var_5.get()\n\n        # Turbine Power Values\n        try:\n            self.turbine_power_1 = self.entry_power_turb_var_1.get()\n        except Exception:\n            self.entry_power_turb_var_1.set('0.0')\n        try:\n            self.turbine_power_2 = self.entry_power_turb_var_2.get()\n        except Exception:\n            self.entry_power_turb_var_2.set('0.0')\n        try:\n            self.turbine_power_3 = self.entry_power_turb_var_3.get()\n        except Exception:\n            self.entry_power_turb_var_3.set('0.0')\n        try:\n            self.turbine_power_4 = self.entry_power_turb_var_4.get()\n        except Exception:\n            self.entry_power_turb_var_4.set('0.0')\n        try:\n            self.turbine_power_5 = self.entry_power_turb_var_5.get()\n        except Exception:\n            self.entry_power_turb_var_5.set('0.0')\n            \n        if self.turbine_power_1 == '':\n            self.turbine_power_1=0\n        elif self.turbine_power_2 == '':\n            self.turbine_power_2=0\n        elif self.turbine_power_3 == '':\n            self.turbine_power_3=0\n        elif self.turbine_power_4 == '':\n            self.turbine_power_4=0\n        elif self.turbine_power_5 == '':\n            self.turbine_power_5=0\n\n        # Turbine Quantities\n        self.turbine_quantity_1 = self.entry_quantity_turb_var_1.get()\n        self.turbine_quantity_2 = self.entry_quantity_turb_var_2.get()\n        self.turbine_quantity_3 = self.entry_quantity_turb_var_3.get()\n        self.turbine_quantity_4 = self.entry_quantity_turb_var_4.get()\n        self.turbine_quantity_5 = self.entry_quantity_turb_var_5.get()\n        try:\n            self.turbine_quantity_1 = self.entry_quantity_turb_var_1.get()\n        except Exception:\n            self.entry_quantity_turb_var_1.set('1')\n        try:\n            self.turbine_quantity_2 = self.entry_quantity_turb_var_2.get()\n        except Exception:\n            self.entry_quantity_turb_var_2.set('1')\n        try:\n            self.turbine_quantity_3 = self.entry_quantity_turb_var_3.get()\n        except Exception:\n            self.entry_quantity_turb_var_3.set('1')\n        try:\n            self.turbine_quantity_4 = self.entry_quantity_turb_var_4.get()\n        except Exception:\n            self.entry_quantity_turb_var_4.set('1')\n        try:\n            self.turbine_quantity_5 = self.entry_quantity_turb_var_5.get()\n        except Exception:\n            self.entry_quantity_turb_var_5.set('1')\n        \n\n        # Turbine Costs\n        self.turbs_cost_1 = (2984.9 * self.turbine_power_1 ** 0.5171)\n        self.turbs_cost_2 = (2984.9 * self.turbine_power_2 ** 0.5171)\n        self.turbs_cost_3 = (2984.9 * self.turbine_power_3 ** 0.5171)\n        self.turbs_cost_4 = (2984.9 * self.turbine_power_4 ** 0.5171)\n        self.turbs_cost_5 = (2984.9 * self.turbine_power_5 ** 0.5171)\n\n        #Turbines Quantity * Individual Cost Totals\n        self.turbs_total_1 = (self.turbs_cost_1 * self.turbine_quantity_1)\n        self.turbs_total_2 = (self.turbs_cost_2 * self.turbine_quantity_2)\n        self.turbs_total_3 = (self.turbs_cost_3 * self.turbine_quantity_3)\n        self.turbs_total_4 = (self.turbs_cost_4 * self.turbine_quantity_4)\n        self.turbs_total_5 = (self.turbs_cost_5 * self.turbine_quantity_5)\n        self.turbs_total = self.turbs_total_1 + self.turbs_total_2 + self.turbs_total_3 + self.turbs_total_3 + self.turbs_total_3 + self.turbs_total_5\n\n\n\n\n\n        ### Heat Exchangers\n        hx_type_snt = 'Heat Exchanger - Shell and Tube'\n        hx_type_plate = 'Heat Exchanger - Plate'\n        hx_type_acc = 'Heat Exchanger - Air-Cooled Condenser'\n\n        # Heat Exchanger - Shell and Tube Names\n        snt_name_1 = self.entry_cname_snt_var_1.get()\n        snt_name_2 = self.entry_cname_snt_var_2.get()\n        snt_name_3 = self.entry_cname_snt_var_3.get()\n        snt_name_4 = self.entry_cname_snt_var_4.get()\n        snt_name_5 = self.entry_cname_snt_var_5.get()\n\n        # Heat Exchanger - Plate Names\n        plate_name_1 = self.entry_cname_plate_var_1.get()\n        plate_name_2 = self.entry_cname_plate_var_2.get()\n        plate_name_3 = self.entry_cname_plate_var_3.get()\n        plate_name_4 = self.entry_cname_plate_var_4.get()\n        plate_name_5 = self.entry_cname_plate_var_5.get()\n\n        # Heat Exchanger - Air-Cooled Condenser Names\n        acc_name_1 = self.entry_cname_condenser_var_1.get()\n        acc_name_2 = self.entry_cname_condenser_var_2.get()\n        acc_name_3 = self.entry_cname_condenser_var_3.get()\n        acc_name_4 = self.entry_cname_condenser_var_4.get()\n        acc_name_5 = self.entry_cname_condenser_var_5.get()\n\n        # Heat Exchanger - Shell and Tube Area Values\n        try:\n            self.snt_area_1 = self.entry_area_snt_var_1.get()\n        except Exception:\n            self.entry_area_snt_var_1.set('0.0')\n        try:\n            self.snt_area_2 = self.entry_area_snt_var_2.get()\n        except Exception:\n            self.entry_area_snt_var_2.set('0.0')\n        try:\n            self.snt_area_3 = self.entry_area_snt_var_3.get()\n        except Exception:\n            self.entry_area_snt_var_3.set('0.0')\n        try:\n            self.snt_area_4 = self.entry_area_snt_var_4.get()\n        except Exception:\n            self.entry_area_snt_var_4.set('0.0')\n        try:\n            self.snt_area_5 = self.entry_area_snt_var_5.get()\n        except Exception:\n            self.entry_area_snt_var_5.set('0.0')\n\n        if self.snt_area_1 == '':\n            self.snt_area_1=0\n        elif self.snt_area_2 == '':\n            self.snt_area_2=0\n        elif self.snt_area_3 == '':\n            self.snt_area_3=0\n        elif self.snt_area_4 == '':\n            self.snt_area_4=0\n        elif self.snt_area_5 == '':\n            self.snt_area_5=0\n\n        # Heat Exchanger - Plate Area Values\n        try:\n            self.plate_area_1 = self.entry_area_plate_var_1.get()\n        except Exception:\n            self.entry_area_plate_var_1.set('0.0')\n        try:\n            self.plate_area_2 = self.entry_area_plate_var_2.get()\n        except Exception:\n            self.entry_area_plate_var_2.set('0.0')\n        try:\n            self.plate_area_3 = self.entry_area_plate_var_3.get()\n        except Exception:\n            self.entry_area_plate_var_3.set('0.0')\n        try:\n            self.plate_area_4 = self.entry_area_plate_var_4.get()\n        except Exception:\n            self.entry_area_plate_var_4.set('0.0')\n        try:\n            self.plate_area_5 = self.entry_area_plate_var_5.get()\n        except Exception:\n            self.entry_area_plate_var_5.set('0.0')\n\n        if self.plate_area_1 == '':\n            self.plate_area_1=0\n        elif self.plate_area_2 == '':\n            self.plate_area_2=0\n        elif self.plate_area_3 == '':\n            self.plate_area_3=0\n        elif self.plate_area_4 == '':\n            self.plate_area_4=0\n        elif self.plate_area_5 == '':\n            self.plate_area_5=0\n\n\n        # Heat Exchanger - Air-Cooled Condenser Area Values\n        try:\n            self.acc_area_1 = self.entry_area_condenser_var_1.get()\n        except Exception:\n            self.entry_area_condenser_var_1.set('0.0')\n        try:\n            self.acc_area_2 = self.entry_area_condenser_var_2.get()\n        except Exception:\n            self.entry_area_condenser_var_2.set('0.0')\n        try:\n            self.acc_area_3 = self.entry_area_condenser_var_3.get()\n        except Exception:\n            self.entry_area_condenser_var_3.set('0.0')\n        try:\n            self.acc_area_4 = self.entry_area_condenser_var_4.get()\n        except Exception:\n            self.entry_area_condenser_var_4.set('0.0')\n        try:\n            self.acc_area_5 = self.entry_area_condenser_var_5.get()\n        except Exception:\n            self.entry_area_condenser_var_5.set('0.0')\n            \n        if self.acc_area_1 == '':\n            self.acc_area_1=0\n        elif self.acc_area_2 == '':\n            self.acc_area_2=0\n        elif self.acc_area_3 == '':\n            self.acc_area_3=0\n        elif self.acc_area_4 == '':\n            self.acc_area_4=0\n        elif self.acc_area_5 == '':\n            self.acc_area_5=0\n\n        \n        # Heat Exchanger - Shell and Tube Quantities\n        try:\n            self.snt_quantity_1 = self.entry_quantity_snt_var_1.get()\n        except Exception:\n            self.entry_quantity_snt_var_1.set('1')\n        try:\n            self.snt_quantity_2 = self.entry_quantity_snt_var_2.get()\n        except Exception:\n            self.entry_quantity_snt_var_2.set('1')\n        try:\n            self.snt_quantity_3 = self.entry_quantity_snt_var_3.get()\n        except Exception:\n            self.entry_quantity_snt_var_3.set('1')\n        try:\n            self.snt_quantity_4 = self.entry_quantity_snt_var_4.get()\n        except Exception:\n            self.entry_quantity_snt_var_4.set('1')\n        try:\n            self.snt_quantity_5 = self.entry_quantity_snt_var_5.get()\n        except Exception:\n            self.entry_quantity_snt_var_5.set('1')\n            \n            \n\n        # Heat Exchanger - Plate Quantities\n        try:\n            self.plate_quantity_1 = self.entry_quantity_plate_var_1.get()\n        except Exception:\n            self.entry_quantity_plate_var_1.set('1')\n        try:\n            self.plate_quantity_2 = self.entry_quantity_plate_var_2.get()\n        except Exception:\n            self.entry_quantity_plate_var_2.set('1')\n        try:\n            self.plate_quantity_3 = self.entry_quantity_plate_var_3.get()\n        except Exception:\n            self.entry_quantity_plate_var_3.set('1')\n        try:\n            self.plate_quantity_4 = self.entry_quantity_plate_var_4.get()\n        except Exception:\n            self.entry_quantity_plate_var_4.set('1')\n        try:\n            self.plate_quantity_5 = self.entry_quantity_plate_var_5.get()\n        except Exception:\n            self.entry_quantity_plate_var_5.set('1')\n\n        # Heat Exchanger - Air-Cooled Condenser Quantities\n        try:\n            self.acc_quantity_1 = self.entry_quantity_condenser_var_1.get()\n        except Exception:\n            self.entry_quantity_condenser_var_1.set('1')\n        try:\n            self.acc_quantity_2 = self.entry_quantity_condenser_var_2.get()\n        except Exception:\n            self.entry_quantity_condenser_var_2.set('1')\n        try:\n            self.acc_quantity_3 = self.entry_quantity_condenser_var_3.get()\n        except Exception:\n            self.entry_quantity_condenser_var_3.set('1')\n        try:\n            self.acc_quantity_4 = self.entry_quantity_condenser_var_4.get()\n        except Exception:\n            self.entry_quantity_condenser_var_4.set('1')\n        try:\n            self.acc_quantity_5 = self.entry_quantity_condenser_var_5.get()\n        except Exception:\n            self.entry_quantity_condenser_var_5.set('1')\n\n        # Heat Exchanger - Shell and Tube Costs\n        self.snt_cost_1 = (627.6 * self.snt_area_1 ** 0.9199)\n        self.snt_cost_2 = (627.6 * self.snt_area_2 ** 0.9199)\n        self.snt_cost_3 = (627.6 * self.snt_area_3 ** 0.9199)\n        self.snt_cost_4 = (627.6 * self.snt_area_4 ** 0.9199)\n        self.snt_cost_5 = (627.6 * self.snt_area_5 ** 0.9199)\n\n        # Heat Exchanger - Plate Costs\n        self.plate_cost_1 = (2667.7 * self.plate_area_1 ** 0.3472)\n        self.plate_cost_2 = (2667.7 * self.plate_area_2 ** 0.3472)\n        self.plate_cost_3 = (2667.7 * self.plate_area_3 ** 0.3472)\n        self.plate_cost_4 = (2667.7 * self.plate_area_4 ** 0.3472)\n        self.plate_cost_5 = (2667.7 * self.plate_area_5 ** 0.3472)\n\n        # Heat Exchanger - ACC Costs\n        self.acc_cost_1 = (1706.2 * self.acc_area_1 ** 0.4301)\n        self.acc_cost_2 = (1706.2 * self.acc_area_2 ** 0.4301)\n        self.acc_cost_3 = (1706.2 * self.acc_area_3 ** 0.4301)\n        self.acc_cost_4 = (1706.2 * self.acc_area_4 ** 0.4301)\n        self.acc_cost_5 = (1706.2 * self.acc_area_5 ** 0.4301)\n\n\n\n        #Heat Exchangers - SNT - Individual * Quantity Costs\n        self.snt_total_1 = (self.snt_cost_1 * self.snt_quantity_1)\n        self.snt_total_2 = (self.snt_cost_2 * self.snt_quantity_2)\n        self.snt_total_3 = (self.snt_cost_3 * self.snt_quantity_3)\n        self.snt_total_4 = (self.snt_cost_4 * self.snt_quantity_4)\n        self.snt_total_5 = (self.snt_cost_5 * self.snt_quantity_5)\n        self.snt_total = self.snt_total_1 + self.snt_total_2 + self.snt_total_3 + self.snt_total_4 + self.snt_total_5\n        \n\n        #Heat Exchangers - Plate - Individual * Quantity Costs\n        self.plate_total_1 = (self.plate_cost_1 * self.plate_quantity_1)\n        self.plate_total_2 = (self.plate_cost_2 * self.plate_quantity_2)\n        self.plate_total_3 = (self.plate_cost_3 * self.plate_quantity_3)\n        self.plate_total_4 = (self.plate_cost_4 * self.plate_quantity_4)\n        self.plate_total_5 = (self.plate_cost_5 * self.plate_quantity_5)\n        self.plate_total = self.plate_total_1 + self.plate_total_2 + self.plate_total_3 + self.plate_total_4 + self.plate_total_5\n\n        #Heat Exchangers - ACC - Individual * Quantity Costs\n        self.acc_total_1 = (self.acc_cost_1 * self.acc_quantity_1)\n        self.acc_total_2 = (self.acc_cost_2 * self.acc_quantity_2)\n        self.acc_total_3 = (self.acc_cost_3 * self.acc_quantity_3)\n        self.acc_total_4 = (self.acc_cost_4 * self.acc_quantity_4)\n        self.acc_total_5 = (self.acc_cost_5 * self.acc_quantity_5)\n        self.acc_total = self.acc_total_1 + self.acc_total_2 + self.acc_total_3 + self.acc_total_4 + self.acc_total_5\n\n\n\n\n\n        ### Pumps\n        pump_type = 'Pump'\n        # Pump Names\n        pump_name_1 = self.entry_cname_pump_var_1.get()\n        pump_name_2 = self.entry_cname_pump_var_2.get()\n        pump_name_3 = self.entry_cname_pump_var_3.get()\n        pump_name_4 = self.entry_cname_pump_var_4.get()\n        pump_name_5 = self.entry_cname_pump_var_5.get()\n\n        #Pump Power Values\n        try:\n            self.pump_power_1 = self.entry_power_pump_var_1.get()\n        except Exception:\n            self.entry_power_pump_var_1.set('0.0')\n        try:\n            self.pump_power_2 = self.entry_power_pump_var_2.get()\n        except Exception:\n            self.entry_power_pump_var_2.set('0.0')\n        try:\n            self.pump_power_3 = self.entry_power_pump_var_3.get()\n        except Exception:\n            self.entry_power_pump_var_3.set('0.0')\n        try:\n            self.pump_power_4 = self.entry_power_pump_var_4.get()\n        except Exception:\n            self.entry_power_pump_var_4.set('0.0')\n        try:\n            self.pump_power_5 = self.entry_power_pump_var_5.get()\n        except Exception:\n            self.entry_power_pump_var_5.set('0.0')\n            \n        \n        if self.pump_power_1 == '':\n            self.pump_power_1=0\n        elif self.pump_power_2 == '':\n            self.pump_power_2=0\n        elif self.pump_power_3 == '':\n            self.pump_power_3=0\n        elif self.pump_power_4 == '':\n            self.pump_power_4=0\n        elif self.pump_power_5 == '':\n            self.pump_power_5=0\n\n        #Pump Quantities\n        try:\n            self.pump_quantity_1 = self.entry_quantity_pump_var_1.get()\n        except Exception:\n            self.entry_quantity_pump_var_1.set('1')    \n        try:\n            self.pump_quantity_2 = self.entry_quantity_pump_var_2.get()\n        except Exception:\n            self.entry_quantity_pump_var_2.set('1')   \n        try:\n            self.pump_quantity_3 = self.entry_quantity_pump_var_3.get()\n        except Exception:\n            self.entry_quantity_pump_var_3.set('1')\n        try:\n            self.pump_quantity_4 = self.entry_quantity_pump_var_4.get()\n        except Exception:\n            self.entry_quantity_pump_var_4.set('1')\n        try:\n            self.pump_quantity_5 = self.entry_quantity_pump_var_5.get()\n        except Exception:\n            self.entry_quantity_pump_var_5.set('1')\n\n        # Pump Costs\n        self.pump_cost_1 = (1513.4 * self.pump_power_1 ** 0.1946)\n        self.pump_cost_2 = (1513.4 * self.pump_power_2 ** 0.1946)\n        self.pump_cost_3 = (1513.4 * self.pump_power_3 ** 0.1946)\n        self.pump_cost_4 = (1513.4 * self.pump_power_4 ** 0.1946)\n        self.pump_cost_5 = (1513.4 * self.pump_power_5 ** 0.1946)\n\n\n        #Pump - Individual * Quantity Costs\n        self.pump_total_1 = (self.pump_cost_1 * self.pump_quantity_1)\n        self.pump_total_2 = (self.pump_cost_2 * self.pump_quantity_2)\n        self.pump_total_3 = (self.pump_cost_3 * self.pump_quantity_3)\n        self.pump_total_4 = (self.pump_cost_4 * self.pump_quantity_4)\n        self.pump_total_5 = (self.pump_cost_5 * self.pump_quantity_5)\n        self.pump_total = self.acc_total_1 + self.pump_total_2 + self.pump_total_3 + self.pump_total_4 + self.pump_total_5\n\n\n\n\n\n        ### Expander\n        expander_type = 'Expander'\n        # Expander Names\n        expander_name_1 = self.entry_cname_expander_var_1.get()\n        expander_name_2 = self.entry_cname_expander_var_2.get()\n        expander_name_3 = self.entry_cname_expander_var_3.get()\n        expander_name_4 = self.entry_cname_expander_var_4.get()\n        expander_name_5 = self.entry_cname_expander_var_5.get()\n        \n        #Expander Power Values\n        try:\n            self.expander_power_1 = self.entry_power_expander_var_1.get()\n        except Exception:\n            self.entry_power_expander_var_1.set('0.0')\n        try:\n            self.expander_power_2 = self.entry_power_expander_var_2.get()\n        except Exception:\n            self.entry_power_expander_var_2.set('0.0')\n        try:\n            self.expander_power_3 = self.entry_power_expander_var_3.get()\n        except Exception:\n            self.entry_power_expander_var_3.set('0.0')\n        try:\n            self.expander_power_4 = self.entry_power_expander_var_4.get()\n        except Exception:\n            self.entry_power_expander_var_4.set('0.0')\n        try:\n            self.expander_power_5 = self.entry_power_expander_var_5.get()\n        except Exception:\n            self.entry_power_expander_var_5.set('0.0')\n            \n        if self.expander_power_1 == '':\n            self.expander_power_1=0\n        elif self.expander_power_2 == '':\n            self.expander_power_2=0\n        elif self.expander_power_3 == '':\n            self.expander_power_3=0\n        elif self.expander_power_4 == '':\n            self.expander_power_4=0\n        elif self.expander_power_5 == '':\n            self.expander_power_5=0\n        \n        #Expander Quantities\n        try:\n            self.expander_quantity_1 = self.entry_quantity_expander_var_1.get()\n        except Exception:\n            self.entry_quantity_expander_var_1.set('1')\n        try:\n            self.expander_quantity_2 = self.entry_quantity_expander_var_2.get()\n        except Exception:\n            self.entry_quantity_expander_var_2.set('1')\n        try:\n            self.expander_quantity_3 = self.entry_quantity_expander_var_3.get()\n        except Exception:\n            self.entry_quantity_expander_var_3.set('1')\n        try:\n            self.expander_quantity_4 = self.entry_quantity_expander_var_4.get()\n        except Exception:\n            self.entry_quantity_expander_var_4.set('1')\n        try:\n            self.expander_quantity_5 = self.entry_quantity_expander_var_5.get()\n        except Exception:\n            self.entry_quantity_expander_var_5.set('1')\n        # Expander Costs\n        self.expander_cost_1 = (544 * self.expander_power_1 ** 0.8331)\n        self.expander_cost_2 = (544 * self.expander_power_2 ** 0.8331)\n        self.expander_cost_3 = (544 * self.expander_power_3 ** 0.8331)\n        self.expander_cost_4 = (544 * self.expander_power_4 ** 0.8331)\n        self.expander_cost_5 = (544 * self.expander_power_5 ** 0.8331)\n\n\n        #Expander Individual * Quantities Costs\n        self.expander_total_1 = (self.expander_cost_1 * self.expander_quantity_1)\n        self.expander_total_2 = (self.expander_cost_2 * self.expander_quantity_2)\n        self.expander_total_3 = (self.expander_cost_3 * self.expander_quantity_3)\n        self.expander_total_4 = (self.expander_cost_4 * self.expander_quantity_4)\n        self.expander_total_5 = (self.expander_cost_5 * self.expander_quantity_5)\n        self.expander_total = self.expander_total_1 + self.expander_total_2 + self.expander_total_3 + self.expander_total_4 + self.expander_total_5\n\n\n        ### Storage Tank\n        st_type = 'Storage Tank'\n        # Storage Tank Names\n        st_name_1 = self.entry_cname_st_var_1.get()\n        st_name_2 = self.entry_cname_st_var_2.get()\n        st_name_3 = self.entry_cname_st_var_3.get()\n        st_name_4 = self.entry_cname_st_var_4.get()\n        st_name_5 = self.entry_cname_st_var_5.get()\n        \n        #Storage Tank Volume Values\n        try:\n            self.st_volume_1 = self.entry_volume_st_var_1.get()\n        except Exception:\n            self.entry_volume_st_var_1.set('0.0')\n        try:\n            self.st_volume_2 = self.entry_volume_st_var_2.get()\n        except Exception:\n            self.entry_volume_st_var_2.set('0.0')\n        try:\n            self.st_volume_3 = self.entry_volume_st_var_3.get()\n        except Exception:\n            self.entry_volume_st_var_3.set('0.0')\n        try:\n            self.st_volume_4 = self.entry_volume_st_var_4.get()\n        except Exception:\n            self.entry_volume_st_var_4.set('0.0')\n        try:\n            self.st_volume_5 = self.entry_volume_st_var_5.get()\n        except Exception:\n            self.entry_volume_st_var_5.set('0.0')\n            \n        if self.st_volume_1 == '':\n            self.st_volume_1=0\n        elif self.st_volume_2 == '':\n            self.st_volume_2=0\n        elif self.st_volume_3 == '':\n            self.st_volume_3=0\n        elif self.st_volume_4 == '':\n            self.st_volume_4=0\n        elif self.st_volume_5 == '':\n            self.st_volume_5=0\n            \n        #Storage Tank Quantities\n        try:\n            self.st_quantity_1 = self.entry_quantity_st_var_1.get()\n        except Exception:\n            self.entry_quantity_st_var_1.set('1')\n        try:\n            self.st_quantity_2 = self.entry_quantity_st_var_2.get()\n        except Exception:\n            self.entry_quantity_st_var_2.set('1')\n        try:\n            self.st_quantity_3 = self.entry_quantity_st_var_3.get()\n        except Exception:\n            self.entry_quantity_st_var_3.set('1')\n        try:\n            self.st_quantity_4 = self.entry_quantity_st_var_4.get()\n        except Exception:\n            self.entry_quantity_st_var_4.set('1')\n        try:\n            self.st_quantity_5 = self.entry_quantity_st_var_5.get()\n        except Exception:\n            self.entry_quantity_st_var_5.set('1')\n\n\n        # Storage Tank Costs\n        self.st_cost_1 = (52.6 * self.st_volume_1 ** 0.5531)\n        self.st_cost_2 = (52.6 * self.st_volume_2 ** 0.5531)\n        self.st_cost_3 = (52.6 * self.st_volume_3 ** 0.5531)\n        self.st_cost_4 = (52.6 * self.st_volume_4 ** 0.5531)\n        self.st_cost_5 = (52.6 * self.st_volume_5 ** 0.5531)\n\n\n        #Storage Tank Individual * Quantities Costs\n        self.st_total_1 = (self.st_cost_1 * self.st_quantity_1)\n        self.st_total_2 = (self.st_cost_2 * self.st_quantity_2)\n        self.st_total_3 = (self.st_cost_3 * self.st_quantity_3)\n        self.st_total_4 = (self.st_cost_4 * self.st_quantity_4)\n        self.st_total_5 = (self.st_cost_5 * self.st_quantity_5)\n        self.st_total = self.st_total_1 + self.st_total_2 + self.st_total_3 + self.st_total_4 + self.st_total_5\n\n\n\n\n        if turbine_name_1 != '':\n            self.total_comp_types[0]=turbine_type\n            self.total_comp_names[0]=turbine_name_1\n            self.total_comp_values[0]=self.turbine_power_1\n            self.total_comp_quantities[0]=self.turbine_quantity_1\n            self.total_comp_individual_costs[0]=self.turbs_cost_1\n            self.total_comp_quantity_cost[0]=self.turbs_total_1\n        elif turbine_name_1 == '':\n            self.total_comp_types[0]=''\n            self.total_comp_names[0]=''\n            self.total_comp_values[0]=''\n            self.total_comp_quantities[0]=''\n            self.total_comp_individual_costs[0]=''\n            self.total_comp_quantity_cost[0]=''\n        \n        if turbine_name_2 != '':\n            self.total_comp_types[1]=turbine_type\n            self.total_comp_names[1]=turbine_name_2\n            self.total_comp_values[1]=self.turbine_power_2\n            self.total_comp_quantities[1]=self.turbine_quantity_2\n            self.total_comp_individual_costs[1]=self.turbs_cost_2\n            self.total_comp_quantity_cost[1]=self.turbs_total_2\n        else:\n            self.total_comp_types[1]=''\n            self.total_comp_names[1]=''\n            self.total_comp_values[1]=''\n            self.total_comp_quantities[1]=''\n            self.total_comp_individual_costs[1]=''\n            self.total_comp_quantity_cost[1]=''\n            \n        if turbine_name_3 != '':\n            self.total_comp_types[2]=turbine_type\n            self.total_comp_names[2]=turbine_name_3\n            self.total_comp_values[2]=self.turbine_power_3\n            self.total_comp_quantities[2]=self.turbine_quantity_3\n            self.total_comp_individual_costs[2]=self.turbs_cost_3\n            self.total_comp_quantity_cost[2]=self.turbs_total_3\n        else:\n            self.total_comp_types[2]=''\n            self.total_comp_names[2]=''\n            self.total_comp_values[2]=''\n            self.total_comp_quantities[2]=''\n            self.total_comp_individual_costs[2]=''\n            self.total_comp_quantity_cost[2]=''\n            \n        if turbine_name_4 != '':\n            self.total_comp_types[3]=turbine_type\n            self.total_comp_names[3]=turbine_name_4\n            self.total_comp_values[3]=self.turbine_power_4\n            self.total_comp_quantities[3]=self.turbine_quantity_4\n            self.total_comp_individual_costs[3]=self.turbs_cost_4\n            self.total_comp_quantity_cost[3]=self.turbs_total_4\n        else:\n            self.total_comp_types[3]=''\n            self.total_comp_names[3]=''\n            self.total_comp_values[3]=''\n            self.total_comp_quantities[3]=''\n            self.total_comp_individual_costs[3]=''\n            self.total_comp_quantity_cost[3]=''\n            \n        if turbine_name_5 != '':\n            self.total_comp_types[4]=turbine_type\n            self.total_comp_names[4]=turbine_name_5\n            self.total_comp_values[4]=self.turbine_power_5\n            self.total_comp_quantities[4]=self.turbine_quantity_5\n            self.total_comp_individual_costs[4]=self.turbs_cost_5\n            self.total_comp_quantity_cost[4]=self.turbs_total_5\n        else:\n            self.total_comp_types[4]=''\n            self.total_comp_names[4]=''\n            self.total_comp_values[4]=''\n            self.total_comp_quantities[4]=''\n            self.total_comp_individual_costs[4]=''\n            self.total_comp_quantity_cost[4]=''\n            \n        if snt_name_1 != '':\n            self.total_comp_types[5]=hx_type_snt\n            self.total_comp_names[5]=snt_name_1\n            self.total_comp_values[5]=self.snt_area_1\n            self.total_comp_quantities[5]=self.snt_quantity_1\n            self.total_comp_individual_costs[5]=self.snt_cost_1\n            self.total_comp_quantity_cost[5]=self.snt_total_1\n        else:\n            self.total_comp_types[5]=''\n            self.total_comp_names[5]=''\n            self.total_comp_values[5]=''\n            self.total_comp_quantities[5]=''\n            self.total_comp_individual_costs[5]=''\n            self.total_comp_quantity_cost[5]=''\n            \n        if snt_name_2 != '':\n            self.total_comp_types[6]=hx_type_snt\n            self.total_comp_names[6]=snt_name_2\n            self.total_comp_values[6]=self.snt_area_2\n            self.total_comp_quantities[6]=self.snt_quantity_2\n            self.total_comp_individual_costs[6]=self.snt_cost_2\n            self.total_comp_quantity_cost[6]=self.snt_total_2\n        else:\n            self.total_comp_types[6]=''\n            self.total_comp_names[6]=''\n            self.total_comp_values[6]=''\n            self.total_comp_quantities[6]=''\n            self.total_comp_individual_costs[6]=''\n            self.total_comp_quantity_cost[6]=''\n            \n        if snt_name_3 != '':\n            self.total_comp_types[7]=hx_type_snt\n            self.total_comp_names[7]=snt_name_3\n            self.total_comp_values[7]=self.snt_area_3\n            self.total_comp_quantities[7]=self.snt_quantity_3\n            self.total_comp_individual_costs[7]=self.snt_cost_3\n            self.total_comp_quantity_cost[7]=self.snt_total_3\n        else:\n            self.total_comp_types[7]=''\n            self.total_comp_names[7]=''\n            self.total_comp_values[7]=''\n            self.total_comp_quantities[7]=''\n            self.total_comp_individual_costs[7]=''\n            self.total_comp_quantity_cost[7]=''\n            \n        if snt_name_4 != '':\n            self.total_comp_types[8]=hx_type_snt\n            self.total_comp_names[8]=snt_name_4\n            self.total_comp_values[8]=self.snt_area_4\n            self.total_comp_quantities[8]=self.snt_quantity_4\n            self.total_comp_individual_costs[8]=self.snt_cost_4\n            self.total_comp_quantity_cost[8]=self.snt_total_4\n        else:\n            self.total_comp_types[8]=''\n            self.total_comp_names[8]=''\n            self.total_comp_values[8]=''\n            self.total_comp_quantities[8]=''\n            self.total_comp_individual_costs[8]=''\n            self.total_comp_quantity_cost[8]=''\n\n        if snt_name_5 != '':\n            self.total_comp_types[9]=hx_type_snt\n            self.total_comp_names[9]=snt_name_5\n            self.total_comp_values[9]=self.snt_area_5\n            self.total_comp_quantities[9]=self.snt_quantity_5\n            self.total_comp_individual_costs[9]=self.snt_cost_5\n            self.total_comp_quantity_cost[9]=self.snt_total_5\n        else:\n            self.total_comp_types[9]=''\n            self.total_comp_names[9]=''\n            self.total_comp_values[9]=''\n            self.total_comp_quantities[9]=''\n            self.total_comp_individual_costs[9]=''\n            self.total_comp_quantity_cost[9]=''\n        \n            \n        if plate_name_1 != '':\n            self.total_comp_types[10]=hx_type_plate\n            self.total_comp_names[10]=plate_name_1\n            self.total_comp_values[10]=self.plate_area_1\n            self.total_comp_quantities[10]=self.plate_quantity_1\n            self.total_comp_individual_costs[10]=self.plate_cost_1\n            self.total_comp_quantity_cost[10]=self.plate_total_1\n        else:\n            self.total_comp_types[10]=''\n            self.total_comp_names[10]=''\n            self.total_comp_values[10]=''\n            self.total_comp_quantities[10]=''\n            self.total_comp_individual_costs[10]=''\n            self.total_comp_quantity_cost[10]=''\n            \n        if plate_name_2 != '':\n            self.total_comp_types[11]=hx_type_plate\n            self.total_comp_names[11]=plate_name_2\n            self.total_comp_values[11]=self.plate_area_2\n            self.total_comp_quantities[11]=self.plate_quantity_2\n            self.total_comp_individual_costs[11]=self.plate_cost_2\n            self.total_comp_quantity_cost[11]=self.plate_total_2\n        else:\n            self.total_comp_types[11]=''\n            self.total_comp_names[11]=''\n            self.total_comp_values[11]=''\n            self.total_comp_quantities[11]=''\n            self.total_comp_individual_costs[11]=''\n            self.total_comp_quantity_cost[11]=''\n        if plate_name_3 != '':\n            self.total_comp_types[12]=hx_type_plate\n            self.total_comp_names[12]=plate_name_3\n            self.total_comp_values[12]=self.plate_area_3\n            self.total_comp_quantities[12]=self.plate_quantity_3\n            self.total_comp_individual_costs[12]=self.plate_cost_3\n            self.total_comp_quantity_cost[12]=self.plate_total_3\n        else:\n            self.total_comp_types[12]=''\n            self.total_comp_names[12]=''\n            self.total_comp_values[12]=''\n            self.total_comp_quantities[12]=''\n            self.total_comp_individual_costs[12]=''\n            self.total_comp_quantity_cost[12]=''\n        if plate_name_4 != '':\n            self.total_comp_types[13]=hx_type_plate\n            self.total_comp_names[13]=plate_name_4\n            self.total_comp_values[13]=self.plate_area_4\n            self.total_comp_quantities[13]=self.plate_quantity_4\n            self.total_comp_individual_costs[13]=self.plate_cost_4\n            self.total_comp_quantity_cost[13]=self.plate_total_4\n        else:\n            self.total_comp_types[13]=''\n            self.total_comp_names[13]=''\n            self.total_comp_values[13]=''\n            self.total_comp_quantities[13]=''\n            self.total_comp_individual_costs[13]=''\n            self.total_comp_quantity_cost[13]=''\n        if plate_name_5 != '':\n            self.total_comp_types[14]=hx_type_plate\n            self.total_comp_names[14]=plate_name_5\n            self.total_comp_values[14]=self.plate_area_5\n            self.total_comp_quantities[14]=self.plate_quantity_5\n            self.total_comp_individual_costs[14]=self.plate_cost_5\n            self.total_comp_quantity_cost[14]=self.plate_total_5\n        else:\n            self.total_comp_types[14]=''\n            self.total_comp_names[14]=''\n            self.total_comp_values[14]=''\n            self.total_comp_quantities[14]=''\n            self.total_comp_individual_costs[14]=''\n            self.total_comp_quantity_cost[14]=''\n                            \n            \n        if acc_name_1 != '':\n            self.total_comp_types[15]=hx_type_acc\n            self.total_comp_names[15]=acc_name_1\n            self.total_comp_values[15]=self.acc_area_1\n            self.total_comp_quantities[15]=self.acc_quantity_1\n            self.total_comp_individual_costs[15]=self.acc_cost_1\n            self.total_comp_quantity_cost[15]=self.acc_total_1\n        else:\n            self.total_comp_types[15]=''\n            self.total_comp_names[15]=''\n            self.total_comp_values[15]=''\n            self.total_comp_quantities[15]=''\n            self.total_comp_individual_costs[15]=''\n            self.total_comp_quantity_cost[15]=''\n            \n        if acc_name_2 != '':\n            self.total_comp_types[16]=hx_type_acc\n            self.total_comp_names[16]=acc_name_2\n            self.total_comp_values[16]=self.acc_area_2\n            self.total_comp_quantities[16]=self.acc_quantity_2\n            self.total_comp_individual_costs[16]=self.acc_cost_2\n            self.total_comp_quantity_cost[16]=self.acc_total_2\n        else:\n            self.total_comp_types[16]=''\n            self.total_comp_names[16]=''\n            self.total_comp_values[16]=''\n            self.total_comp_quantities[16]=''\n            self.total_comp_individual_costs[16]=''\n            self.total_comp_quantity_cost[16]=''\n        if acc_name_3 != '':\n            self.total_comp_types[17]=hx_type_acc\n            self.total_comp_names[17]=acc_name_3\n            self.total_comp_values[17]=self.acc_area_3\n            self.total_comp_quantities[17]=self.acc_quantity_3\n            self.total_comp_individual_costs[17]=self.acc_cost_3\n            self.total_comp_quantity_cost[17]=self.acc_total_3\n        else:\n            self.total_comp_types[17]=''\n            self.total_comp_names[17]=''\n            self.total_comp_values[17]=''\n            self.total_comp_quantities[17]=''\n            self.total_comp_individual_costs[17]=''\n            self.total_comp_quantity_cost[17]=''\n        if acc_name_4 != '':\n            self.total_comp_types[18]=hx_type_acc\n            self.total_comp_names[18]=acc_name_4\n            self.total_comp_values[18]=self.acc_area_4\n            self.total_comp_quantities[18]=self.acc_quantity_4\n            self.total_comp_individual_costs[18]=self.acc_cost_4\n            self.total_comp_quantity_cost[18]=self.acc_total_4\n        else:\n            self.total_comp_types[18]=''\n            self.total_comp_names[18]=''\n            self.total_comp_values[18]=''\n            self.total_comp_quantities[18]=''\n            self.total_comp_individual_costs[18]=''\n            self.total_comp_quantity_cost[18]=''\n        if acc_name_5 != '':\n            self.total_comp_types[19]=hx_type_acc\n            self.total_comp_names[19]=acc_name_5\n            self.total_comp_values[19]=acc_area_5\n            self.total_comp_quantities[19]=self.acc_quantity_5\n            self.total_comp_individual_costs[19]=self.acc_cost_5\n            self.total_comp_quantity_cost[19]=self.acc_total_5\n        else:\n            self.total_comp_types[19]=''\n            self.total_comp_names[19]=''\n            self.total_comp_values[19]=''\n            self.total_comp_quantities[19]=''\n            self.total_comp_individual_costs[19]=''\n            self.total_comp_quantity_cost[19]=''\n\n\n            \n        if pump_name_1 != '':\n            self.total_comp_types[20]=pump_type\n            self.total_comp_names[20]=pump_name_1\n            self.total_comp_values[20]=self.pump_power_1\n            self.total_comp_quantities[20]=self.pump_quantity_1\n            self.total_comp_individual_costs[20]=self.pump_cost_1\n            self.total_comp_quantity_cost[20]=self.pump_total_1\n        else:\n            self.total_comp_types[20]=''\n            self.total_comp_names[20]=''\n            self.total_comp_values[20]=''\n            self.total_comp_quantities[20]=''\n            self.total_comp_individual_costs[20]=''\n            self.total_comp_quantity_cost[20]=''\n            \n        if pump_name_2 != '':\n            self.total_comp_types[21]=pump_type\n            self.total_comp_names[21]=pump_name_2\n            self.total_comp_values[21]=self.pump_power_2\n            self.total_comp_quantities[21]=self.pump_quantity_2\n            self.total_comp_individual_costs[21]=self.pump_cost_2\n            self.total_comp_quantity_cost[21]=self.pump_total_2\n        else:\n            self.total_comp_types[21]=''\n            self.total_comp_names[21]=''\n            self.total_comp_values[21]=''\n            self.total_comp_quantities[21]=''\n            self.total_comp_individual_costs[21]=''\n            self.total_comp_quantity_cost[21]=''\n        if pump_name_3 != '':\n            self.total_comp_types[22]=pump_type\n            self.total_comp_names[22]=pump_name_3\n            self.total_comp_values[22]=self.pump_power_3\n            self.total_comp_quantities[22]=self.pump_quantity_3\n            self.total_comp_individual_costs[22]=self.pump_cost_3\n            self.total_comp_quantity_cost[22]=self.pump_total_3\n        else:\n            self.total_comp_types[22]=''\n            self.total_comp_names[22]=''\n            self.total_comp_values[22]=''\n            self.total_comp_quantities[22]=''\n            self.total_comp_individual_costs[22]=''\n            self.total_comp_quantity_cost[22]=''\n        if pump_name_4 != '':\n            self.total_comp_types[23]=pump_type\n            self.total_comp_names[23]=pump_name_4\n            self.total_comp_values[23]=self.pump_power_4\n            self.total_comp_quantities[23]=self.pump_quantity_4\n            self.total_comp_individual_costs[23]=self.pump_cost_4\n            self.total_comp_quantity_cost[23]=self.pump_total_4\n        else:\n            self.total_comp_types[23]=''\n            self.total_comp_names[23]=''\n            self.total_comp_values[23]=''\n            self.total_comp_quantities[23]=''\n            self.total_comp_individual_costs[23]=''\n            self.total_comp_quantity_cost[23]=''\n        if pump_name_5 != '':\n            self.total_comp_types[24]=pump_type\n            self.total_comp_names[24]=pump_name_5\n            self.total_comp_values[24]=self.pump_power_5\n            self.total_comp_quantities[24]=self.pump_quantity_5\n            self.total_comp_individual_costs[24]=self.pump_cost_5\n            self.total_comp_quantity_cost[24]=self.pump_total_5\n        else:\n            self.total_comp_types[24]=''\n            self.total_comp_names[24]=''\n            self.total_comp_values[24]=''\n            self.total_comp_quantities[24]=''\n            self.total_comp_individual_costs[24]=''\n            self.total_comp_quantity_cost[24]=''\n\n            \n        if expander_name_1 != '':\n            self.total_comp_types[25]=expander_type\n            self.total_comp_names[25]=expander_name_1\n            self.total_comp_values[25]=self.expander_power_1\n            self.total_comp_quantities[25]=self.expander_quantity_1\n            self.total_comp_individual_costs[25]=self.expander_cost_1\n            self.total_comp_quantity_cost[25]=self.expander_total_1\n        else:\n            self.total_comp_types[25]=''\n            self.total_comp_names[25]=''\n            self.total_comp_values[25]=''\n            self.total_comp_quantities[25]=''\n            self.total_comp_individual_costs[25]=''\n            self.total_comp_quantity_cost[25]=''\n            \n        if expander_name_2 != '':\n            self.total_comp_types[26]=expander_type\n            self.total_comp_names[26]=expander_name_2\n            self.total_comp_values[26]=self.expander_power_2\n            self.total_comp_quantities[26]=self.expander_quantity_2\n            self.total_comp_individual_costs[26]=self.expander_cost_2\n            self.total_comp_quantity_cost[26]=self.expander_total_2\n        else:\n            self.total_comp_types[26]=''\n            self.total_comp_names[26]=''\n            self.total_comp_values[26]=''\n            self.total_comp_quantities[26]=''\n            self.total_comp_individual_costs[26]=''\n            self.total_comp_quantity_cost[26]=''\n        if expander_name_3 != '':\n            self.total_comp_types[27]=expander_type\n            self.total_comp_names[27]=expander_name_3\n            self.total_comp_values[27]=self.expander_power_3\n            self.total_comp_quantities[27]=self.expander_quantity_3\n            self.total_comp_individual_costs[27]=self.expander_cost_3\n            self.total_comp_quantity_cost[27]=self.expander_total_3\n        else:\n            self.total_comp_types[27]=''\n            self.total_comp_names[27]=''\n            self.total_comp_values[27]=''\n            self.total_comp_quantities[27]=''\n            self.total_comp_individual_costs[27]=''\n            self.total_comp_quantity_cost[27]=''\n        if expander_name_4 != '':\n            self.total_comp_types[28]=expander_type\n            self.total_comp_names[28]=expander_name_4\n            self.total_comp_values[28]=self.expander_power_4\n            self.total_comp_quantities[28]=self.expander_quantity_4\n            self.total_comp_individual_costs[28]=self.expander_cost_4\n            self.total_comp_quantity_cost[28]=self.expander_total_4\n        else:\n            self.total_comp_types[28]=''\n            self.total_comp_names[28]=''\n            self.total_comp_values[28]=''\n            self.total_comp_quantities[28]=''\n            self.total_comp_individual_costs[28]=''\n            self.total_comp_quantity_cost[28]=''\n        if expander_name_5 != '':\n            self.total_comp_types[29]=expander_type\n            self.total_comp_names[29]=expander_name_5\n            self.total_comp_values[29]=self.expander_power_5\n            self.total_comp_quantities[29]=self.expander_quantity_5\n            self.total_comp_individual_costs[29]=self.expander_cost_5\n            self.total_comp_quantity_cost[29]=self.expander_total_5\n        else:\n            self.total_comp_types[29]=''\n            self.total_comp_names[29]=''\n            self.total_comp_values[29]=''\n            self.total_comp_quantities[29]=''\n            self.total_comp_individual_costs[29]=''\n            self.total_comp_quantity_cost[29]=''\n                            \n        if expander_name_1 == '':\n            self.total_comp_types[25]=''\n            self.total_comp_names[25]=''\n            self.total_comp_values[25]=''\n            self.total_comp_quantities[25]=''\n            self.total_comp_individual_costs[25]=''\n            self.total_comp_quantity_cost[25]=''\n        else:\n            self.total_comp_types[30]=''\n            self.total_comp_names[30]=''\n            self.total_comp_values[30]=''\n            self.total_comp_quantities[30]=''\n            self.total_comp_individual_costs[30]=''\n            self.total_comp_quantity_cost[30]=''\n            \n        if st_name_1 != '':\n            self.total_comp_types[30]=st_type\n            self.total_comp_names[30]=st_name_1\n            self.total_comp_values[30]=self.st_volume_1\n            self.total_comp_quantities[30]=self.st_quantity_1\n            self.total_comp_individual_costs[30]=self.st_cost_1\n            self.total_comp_quantity_cost[30]=self.st_total_1\n        else:\n            self.total_comp_types[30]=''\n            self.total_comp_names[30]=''\n            self.total_comp_values[30]=''\n            self.total_comp_quantities[30]=''\n            self.total_comp_individual_costs[30]=''\n            self.total_comp_quantity_cost[30]=''\n        if st_name_2 != '':\n            self.total_comp_types[31]=st_type\n            self.total_comp_names[31]=st_name_2\n            self.total_comp_values[31]=self.st_volume_2\n            self.total_comp_quantities[31]=self.st_quantity_2\n            self.total_comp_individual_costs[31]=self.st_cost_2\n            self.total_comp_quantity_cost[31]=self.st_total_2\n        else:\n            self.total_comp_types[31]=''\n            self.total_comp_names[31]=''\n            self.total_comp_values[31]=''\n            self.total_comp_quantities[31]=''\n            self.total_comp_individual_costs[31]=''\n            self.total_comp_quantity_cost[31]=''\n        if st_name_3 != '':\n            self.total_comp_types[32]=st_type\n            self.total_comp_names[32]=st_name_3\n            self.total_comp_values[32]=self.st_volume_3\n            self.total_comp_quantities[32]=self.st_quantity_3\n            self.total_comp_individual_costs[32]=self.st_cost_3\n            self.total_comp_quantity_cost[32]=self.st_total_3\n        else:\n            self.total_comp_types[32]=''\n            self.total_comp_names[32]=''\n            self.total_comp_values[32]=''\n            self.total_comp_quantities[32]=''\n            self.total_comp_individual_costs[32]=''\n            self.total_comp_quantity_cost[32]=''\n        if st_name_4 != '':\n            self.total_comp_types[33]=st_type\n            self.total_comp_names[33]=st_name_4\n            self.total_comp_values[33]=self.st_volume_4\n            self.total_comp_quantities[33]=self.st_quantity_4\n            self.total_comp_individual_costs[33]=self.st_cost_4\n            self.total_comp_quantity_cost[33]=self.st_total_4\n        else:\n            self.total_comp_types[33]=''\n            self.total_comp_names[33]=''\n            self.total_comp_values[33]=''\n            self.total_comp_quantities[33]=''\n            self.total_comp_individual_costs[33]=''\n            self.total_comp_quantity_cost[33]=''\n        if st_name_5 != '':\n            self.total_comp_types[34]=st_type\n            self.total_comp_names[34]=st_name_5\n            self.total_comp_values[34]=self.st_volume_5\n            self.total_comp_quantities[34]=self.st_quantity_5\n            self.total_comp_individual_costs[34]=self.st_cost_5\n            self.total_comp_quantity_cost[34]=self.st_total_5\n        else:\n            self.total_comp_types[34]=''\n            self.total_comp_names[34]=''\n            self.total_comp_values[34]=''\n            self.total_comp_quantities[34]=''\n            self.total_comp_individual_costs[34]=''\n            self.total_comp_quantity_cost[34]=''\n\n\n\n        ### Update TreeView\n        for k in self.treeview.get_children():\n            self.treeview.delete(k)\n\n        for i in range(len(self.total_comp_names)):\n            try:\n                self.treeview.insert('', tk.END,\n                                     values=(self.total_comp_types[i], self.total_comp_names[i], self.total_comp_values[i], self.total_comp_quantities[i],\n                                             f\"{self.total_comp_individual_costs[i]:.2f}\", f\"{self.total_comp_quantity_cost[i]:.2f}\"))\n                i += 1\n            except IndexError:\n                self.treeview.insert('', tk.END, values=('', '', '', '', '', ''))\n                i += 1\n            except ValueError:\n                self.treeview.insert('', tk.END, values=('', '', '', '', '', ''))\n                i += 1\n            self.treeview.pack(pady=2, padx=2)\n        for col in self.columns:\n            self.treeview.heading(col, text=col,\n                                  command=lambda c=col: self.treeview_sort_column(self.treeview, c, False))\n\n        \n\n\n\n    def total_cost_calculate(self):\n        # multiply quantities with individual costs to get total of each\n        # then add up each of the results together to get the total overall result for the system.\n        #FETCH INDIVIDUAL COSTS\n        ### TOTAL SYSTEM COST\n        self.total_system_cost = self.turbs_total + self.snt_total + self.plate_total + self.acc_total + self.pump_total + self.expander_total + self.st_total\n        messagebox.showinfo(title='Results',message='Calculations Complete.')\n\n        print(\"Turbines:\",self.turbs_total)\n        print(\"SNT:\",self.snt_total)\n        print(\"Plate:\",self.plate_total)\n        print(\"ACC:\",self.acc_total)\n        print(\"Pump:\",self.pump_total)\n        print(\"Expander:\",self.expander_total)\n        print(\"ST:\",self.st_total)\n\n        ### Update the TreeView table.\n        ### Show results below the table.\n        self.results_label['text'] = f\"Total System Cost: £{self.total_system_cost:.2f}\"\n\n    def add_remove_validate(self, add_remove_inp):\n        if add_remove_inp.isdigit():\n            return True\n        elif add_remove_inp is \"\":\n            return True\n        else:\n            return False\n    \n    def cname_validate(self, cname_inp):\n        if cname_inp is \"\":\n            return True\n        elif cname_inp is None:\n            return False\n        else:\n            return True\n\n    def area_validate(self, area_inp):\n        if area_inp is \"\":\n            return True\n        elif area_inp is None:\n            return False\n        else:\n            return True\n\n    def power_validate(self, power_inp):\n        if power_inp is \"\":\n            return True\n        elif power_inp is None:\n            return False\n        else:\n            return True\n\n    def volume_validate(self, volume_inp):\n        if volume_inp.isdigit():\n            return True\n        elif volume_inp is \"\":\n            return False\n        elif volume_inp is None:\n            return True\n        else:\n            return False\n\n    def quantity_validate(self, quantity_inp):\n        if quantity_inp.isdigit():\n            quantity_inp_lencheck = ''.join(quantity_inp)\n            if quantity_inp_lencheck[0] == '0':\n                return False\n            else:\n                return True\n        elif quantity_inp is \"\":\n            return True\n        elif quantity_inp is None:\n            return True\n        else:\n            return False\n        \n\ndef main():\n    root = tk.Tk()\n    app = NotebookTest(root)\n    root.mainloop()\n\nif __name__ == \"__main__\":\n    main()\n\n\n\n\n\n",
			"file": "ORCCalculator.py",
			"file_size": 236116,
			"file_write_time": 132364798094007753,
			"settings":
			{
				"buffer_size": 231571,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package ResourceViewer",
				"PackageResourceViewer: Open Resource"
			],
			[
				"Packalge Control: Install Package",
				"Package Control: Install Package"
			],
			[
				"Install Package Control",
				"Package Control: Install Package"
			],
			[
				"prv",
				"Permute Lines: Reverse"
			],
			[
				"python",
				"Build With: Python"
			],
			[
				"Install",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/marco/Desktop/Programming/Heat Exchanger Avg Cost/main revamped/ORCCalculator.py",
		"/C/Users/marco/Desktop/Programming/Heat Exchanger Avg Cost/main/.git/COMMIT_EDITMSG",
		"/C/Users/marco/Desktop/Collyer's Folder/Computer Science/Y2 Project/Library Management System/.git/COMMIT_EDITMSG",
		"/C/Users/marco/Desktop/Collyer's Folder/Computer Science/Y2 Project/Library Management System/create_db.py",
		"/C/Users/marco/Desktop/Collyer's Folder/Computer Science/Y2 Project/Library Management System/insert_book_values.py",
		"/C/Users/marco/Desktop/Programming/MERCEDESBENZ.py",
		"/C/Users/marco/Desktop/Programming/Mandelbrot fractaql/fractal.py",
		"/C/Users/marco/Desktop/Collyer's Folder/Computer Science/Y2 Project/Library Management System/test.py",
		"/C/Users/marco/Desktop/Collyer's Folder/Computer Science/Y2 Project/Library Management System/modes.py",
		"/C/Users/marco/Desktop/Collyer's Folder/Computer Science/Y2 Project/Library Management System/testing different modes.py",
		"/C/Users/marco/Desktop/Collyer's Folder/Computer Science/Y2 Project/Library Management System/join statement tests.py",
		"/C/Users/marco/Desktop/Collyer's Folder/Computer Science/Y2 Project/Library Management System/autocomplete.py",
		"/C/Users/marco/Desktop/Programming/TEST_DB.py",
		"/C/Users/marco/Desktop/Programming/hash issue db.py",
		"/C/Users/marco/AppData/Roaming/Sublime Text 3/Packages/Default/exec.py",
		"/C/Users/marco/Desktop/Collyer's Folder/Computer Science/Y2 Project/create_db.py",
		"/C/Users/marco/Desktop/Programming/Library Management System Flask/run.py",
		"/C/Users/marco/Desktop/Programming/Library Management System Flask/LMSf/users/utils.py",
		"/C/Users/marco/Desktop/Programming/Library Management System Flask/LMSf/users/routes.py",
		"/C/Users/marco/Desktop/Programming/Library Management System Flask/LMSf/users/forms.py",
		"/C/Users/marco/Desktop/Programming/Library Management System Flask/LMSf/posts/routes.py",
		"/C/Users/marco/Desktop/Programming/Library Management System Flask/LMSf/main/routes.py",
		"/C/Users/marco/Desktop/Programming/Library Management System Flask/LMSf/models.py",
		"/C/Users/marco/Desktop/Programming/Library Management System Flask/LMSf/__init__.py",
		"/C/Users/marco/Desktop/Programming/Library Management System Flask/LMSf/env/Scripts/Activate.ps1",
		"/C/Users/marco/Desktop/Programming/Library Management System Flask/LMSf/env/Scripts/activate.bat",
		"/C/Users/marco/Desktop/Programming/Library Management System Flask/LMSf/env/Scripts/activate",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/users/forms.py",
		"/C/Users/marco/Desktop/Programming/Flask/Procfile",
		"/C/Users/marco/Desktop/Programming/Flask/requirements.txt",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/__init__.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/errors/500.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/errors/403.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/errors/404.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/errors/handlers.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/errors/__init__.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/models.py",
		"/C/Users/marco/Desktop/Programming/Flask/run.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/users/utils.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/config.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/user_posts.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/register.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/post.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/login.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/layout.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/home.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/users/routes.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/posts/routes.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/main/routes.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/env/Lib/site-packages/flask/helpers.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/env/Lib/site-packages/flask_login/utils.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/posts/forms.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/routes.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/forms.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/account.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/create_post.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/reset_token.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/reset_request.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/main/__init__.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/posts/__init__.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/users/__init__.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/reset_token.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/static/posts.json",
		"/C/Users/marco/Desktop/Programming/Flask/static/main.css",
		"/C/Users/marco/Desktop/Programming/Flask/templates/layout.html",
		"/C/Users/marco/Desktop/Programming/Flask/templates/about.html",
		"/C/Users/marco/Desktop/Programming/Flask/templates/home.html",
		"/C/Users/marco/Desktop/Programming/Flask/forms.py",
		"/C/Users/marco/Desktop/Programming/Flask/templates/login.html",
		"/C/Users/marco/Desktop/Programming/Flask/templates/register.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial.py",
		"/C/Users/marco/Desktop/Programming/Flask/models.py",
		"/C/Users/marco/AppData/Local/Temp/kite_tutorial.py",
		"/C/Users/marco/AppData/Roaming/Sublime Text 3/Packages/User/python3.sublime-build",
		"/C/Users/marco/AppData/Roaming/Sublime Text 3/Packages/KiteSublime/KiteSublime.sublime-settings",
		"/C/Users/marco/Desktop/Programming/Flask/flask tutorial.sublime-project",
		"/C/Users/marco/Desktop/Programming/Graveyard/emailsdcz",
		"/C/Users/marco/Desktop/Collyer's Folder/Computer Science/Transfer Project/testers/eTicket email Receipt Invoices Tests/Invoice Testing.py"
	],
	"find":
	{
		"height": 22.0
	},
	"find_in_files":
	{
		"height": 619.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ORCCalculator.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 231571,
						"regions":
						{
						},
						"selection":
						[
							[
								6837,
								6585
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2847.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 209.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 126.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\Users\\marco\\Desktop\\Collyer's Folder\\Computer Science\\Y2 Project\\Library Management System\\LMS.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 202.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
