{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"mid2",
				"mid2\tFrame ⟠"
			],
			[
				"mid1",
				"mid1\tFrame ⟠"
			],
			[
				"today",
				"today_formatted"
			],
			[
				"arr",
				"arr_values"
			],
			[
				"arr_all",
				"arr_all"
			],
			[
				"tree_values",
				"tree_values_tuple"
			],
			[
				"date_issed",
				"date_issued_list"
			],
			[
				"date_issued",
				"date_issued_list"
			],
			[
				"Main",
				"MainApplication"
			],
			[
				"email_add",
				"email_address_list"
			],
			[
				"email_address",
				"email_address_fetch"
			],
			[
				"time",
				"time_remaining"
			],
			[
				"empty",
				"empty_list"
			],
			[
				"password_str",
				"password_strength_container_1"
			],
			[
				"password_sten",
				"password_strength_label_2"
			],
			[
				"global",
				"global_frame"
			],
			[
				"sign",
				"sign_in_notebook"
			],
			[
				"change_pass",
				"change_password_button_container"
			],
			[
				"change_password",
				"change_password_container"
			],
			[
				"show",
				"showinfo"
			],
			[
				"ret_search",
				"ret_search_container_canvas"
			],
			[
				"email_",
				"email_input"
			],
			[
				"boo",
				"book_owner\tlist ⟠"
			],
			[
				"right",
				"RIGHT"
			],
			[
				"ret_",
				"ret_title_var"
			],
			[
				"book",
				"book_id_search\t⟠"
			],
			[
				"tab",
				"notebook_tab_change"
			],
			[
				"libr",
				"Library"
			],
			[
				"aCCOUNT",
				"Accounts"
			],
			[
				"my",
				"mybooks_tv"
			],
			[
				"Update",
				"UpdateLibraryTV"
			],
			[
				"user_em",
				"current_user_email"
			],
			[
				"account",
				"account_mybooks_check"
			],
			[
				"fro",
				"FROM"
			],
			[
				"text",
				"textvariable"
			],
			[
				"variable",
				"variable_declaration"
			],
			[
				"get",
				"get_date"
			],
			[
				"set",
				"set_date"
			],
			[
				"search",
				"search_container"
			],
			[
				"Librar",
				"LibrarySystem"
			],
			[
				"signin",
				"sign_in_notebook"
			],
			[
				"sign_in",
				"sign_in_notebook"
			],
			[
				"Register",
				"RegisterLogin"
			],
			[
				"login",
				"login_page"
			],
			[
				"selection",
				"selection_set(…)\tfunction ⟠"
			],
			[
				"dumm",
				"dummy_data_temp_2\tlist ⟠"
			],
			[
				"d",
				"dummy_data_temp_2\tlist ⟠"
			],
			[
				"top",
				"TOP\tstr ⟠"
			],
			[
				"account_container",
				"account_container_header\tLabel ⟠"
			],
			[
				"grid_",
				"grid_columnconfigure(…)\tfunction ⟠"
			],
			[
				"notebook",
				"main_notebook"
			],
			[
				"Req",
				"RequestResetForm"
			],
			[
				"Regist",
				"RegistrationForm"
			],
			[
				"Pass",
				"PasswordField"
			],
			[
				"R",
				"RequestResetForm\ttype ⟠"
			],
			[
				"Text",
				"TextAreaField\ttype ⟠"
			],
			[
				"datetime",
				"datetime\ttype ⟠"
			],
			[
				"Email",
				"email_validator\t⟠"
			],
			[
				"password",
				"password"
			]
		]
	},
	"buffers":
	[
		{
			"file": "main.py",
			"settings":
			{
				"buffer_size": 10391,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "if count <= 6:\n            tk.Frame.__init__(self, top, bg='gray20')\n            self.pack(side=tk.LEFT, padx=5, pady=5)\n\n            comp_canvas = tk.Canvas(self, width=200, height=200, relief=tk.RIDGE, bd=1, bg='gray15')\n            comp_canvas.pack(side=tk.TOP, anchor=tk.NW, padx=30, pady=15)\n\n            title_lbl = tk.Label(comp_canvas, text='Component Information %d' % count, fg=fg, bg='gray25')\n            title_lbl.pack()\n\n            #Component Name\n            name_frame = tk.Frame(comp_canvas, relief=tk.FLAT, bd=0, bg='gray15')\n            name_frame.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n            name_lbl = tk.Label(name_frame, relief=tk.FLAT, bd=0, bg='gray15')\n            name_lbl.config(bd=0, text='Name: ', font='System 6', fg=fg)\n            name_lbl.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n            name_reg = top.register(self.name_validate)\n\n            self.name_var = tk.StringVar()\n            self.name_var.set('')\n\n            name_entry = ttk.Entry(name_frame, textvariable=self.name_var, validate=\"key\", validatecommand=(name_reg, '%P'))\n            name_entry.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n            #Component Power(kW) (must be real)\n            power_frame = tk.Frame(comp_canvas, relief=tk.FLAT, bd=0, bg='gray15')\n            power_frame.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n            power_lbl = tk.Label(power_frame, relief=tk.FLAT, bd=0, bg='gray15')\n            power_lbl.config(bd=0, text='Power(kW): ', font='System 6', fg=fg)\n            power_lbl.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n            power_reg = top.register(self.power_validate)\n\n            self.power_var = tk.DoubleVar()\n            self.power_var.set('0.0')\n\n            power_entry = ttk.Entry(power_frame, textvariable=self.power_var, validate=\"key\", validatecommand=(power_reg, '%P'))\n            power_entry.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n            #Component Quantity\n            quantity_frame = tk.Frame(comp_canvas, relief=tk.FLAT, bd=0, bg='gray15')\n            quantity_frame.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n            quantity_lbl = tk.Label(quantity_frame, relief=tk.FLAT, bd=0, bg='gray15')\n            quantity_lbl.config(bd=0, text='Quantity: ', font='System 6', fg=fg)\n            quantity_lbl.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n            quantity_reg = top.register(self.quantity_validate)\n\n            self.quantity_var = tk.IntVar()\n            self.quantity_var.set('1')\n\n            quantity_entry = ttk.Entry(quantity_frame, textvariable=self.quantity_var, validate=\"key\", validatecommand=(quantity_reg, '%P'))\n            quantity_entry.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n            remove_btn = tk.Button(self, text='Remove', command=self.destroy)\n            remove_btn.pack(pady=5)\n\n        elif count > 6 and count <=12:\n            tk.Frame.__init__(self, mid1, bg='gray20')\n            self.pack(side=tk.LEFT, padx=5, pady=5)\n\n            comp_canvas = tk.Canvas(self, width=200, height=200, relief=tk.RIDGE, bd=1, bg='gray15')\n            comp_canvas.pack(side=tk.TOP, anchor=tk.NW, padx=30, pady=15)\n\n            title_lbl = tk.Label(comp_canvas, text='Component Information %d' % count, fg=fg, bg='gray25')\n            title_lbl.pack()\n\n            #Component Name\n            name_frame = tk.Frame(comp_canvas, relief=tk.FLAT, bd=0, bg='gray15')\n            name_frame.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n            name_lbl = tk.Label(name_frame, relief=tk.FLAT, bd=0, bg='gray15')\n            name_lbl.config(bd=0, text='Name: ', font='System 6', fg=fg)\n            name_lbl.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n            name_reg = mid1.register(self.name_validate)\n\n            self.name_var = tk.StringVar()\n            self.name_var.set('')\n\n            name_entry = ttk.Entry(name_frame, textvariable=self.name_var, validate=\"key\", validatecommand=(name_reg, '%P'))\n            name_entry.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n            #Component Power(kW) (must be real)\n            power_frame = tk.Frame(comp_canvas, relief=tk.FLAT, bd=0, bg='gray15')\n            power_frame.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n            power_lbl = tk.Label(power_frame, relief=tk.FLAT, bd=0, bg='gray15')\n            power_lbl.config(bd=0, text='Power(kW): ', font='System 6', fg=fg)\n            power_lbl.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n            power_reg = mid1.register(self.power_validate)\n\n            self.power_var = tk.DoubleVar()\n            self.power_var.set('0.0')\n\n            power_entry = ttk.Entry(power_frame, textvariable=self.power_var, validate=\"key\", validatecommand=(power_reg, '%P'))\n            power_entry.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n            #Component Quantity\n            quantity_frame = tk.Frame(comp_canvas, relief=tk.FLAT, bd=0, bg='gray15')\n            quantity_frame.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n            quantity_lbl = tk.Label(quantity_frame, relief=tk.FLAT, bd=0, bg='gray15')\n            quantity_lbl.config(bd=0, text='Quantity: ', font='System 6', fg=fg)\n            quantity_lbl.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n            quantity_reg = mid1.register(self.quantity_validate)\n\n            self.quantity_var = tk.IntVar()\n            self.quantity_var.set('1')\n\n            quantity_entry = ttk.Entry(quantity_frame, textvariable=self.quantity_var, validate=\"key\", validatecommand=(quantity_reg, '%P'))\n            quantity_entry.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n            remove_btn = tk.Button(self, text='Remove', command=self.destroy)\n            remove_btn.pack(pady=5)\n\n        elif count > 12 and count <=18:\n            tk.Frame.__init__(self, mid2, bg='gray20')\n            self.pack(side=tk.LEFT, padx=5, pady=5)\n\n            comp_canvas = tk.Canvas(self, width=200, height=200, relief=tk.RIDGE, bd=1, bg='gray15')\n            comp_canvas.pack(side=tk.TOP, anchor=tk.NW, padx=30, pady=15)\n\n            title_lbl = tk.Label(comp_canvas, text='Component Information %d' % count, fg=fg, bg='gray25')\n            title_lbl.pack()\n\n            #Component Name\n            name_frame = tk.Frame(comp_canvas, relief=tk.FLAT, bd=0, bg='gray15')\n            name_frame.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n            name_lbl = tk.Label(name_frame, relief=tk.FLAT, bd=0, bg='gray15')\n            name_lbl.config(bd=0, text='Name: ', font='System 6', fg=fg)\n            name_lbl.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n            name_reg = mid2.register(self.name_validate)\n\n            self.name_var = tk.StringVar()\n            self.name_var.set('')\n\n            name_entry = ttk.Entry(name_frame, textvariable=self.name_var, validate=\"key\", validatecommand=(name_reg, '%P'))\n            name_entry.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n            #Component Power(kW) (must be real)\n            power_frame = tk.Frame(comp_canvas, relief=tk.FLAT, bd=0, bg='gray15')\n            power_frame.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n            power_lbl = tk.Label(power_frame, relief=tk.FLAT, bd=0, bg='gray15')\n            power_lbl.config(bd=0, text='Power(kW): ', font='System 6', fg=fg)\n            power_lbl.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n            power_reg = mid2.register(self.power_validate)\n\n            self.power_var = tk.DoubleVar()\n            self.power_var.set('0.0')\n\n            power_entry = ttk.Entry(power_frame, textvariable=self.power_var, validate=\"key\", validatecommand=(power_reg, '%P'))\n            power_entry.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n            #Component Quantity\n            quantity_frame = tk.Frame(comp_canvas, relief=tk.FLAT, bd=0, bg='gray15')\n            quantity_frame.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n            quantity_lbl = tk.Label(quantity_frame, relief=tk.FLAT, bd=0, bg='gray15')\n            quantity_lbl.config(bd=0, text='Quantity: ', font='System 6', fg=fg)\n            quantity_lbl.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n            quantity_reg = mid2.register(self.quantity_validate)\n\n            self.quantity_var = tk.IntVar()\n            self.quantity_var.set('1')\n\n            quantity_entry = ttk.Entry(quantity_frame, textvariable=self.quantity_var, validate=\"key\", validatecommand=(quantity_reg, '%P'))\n            quantity_entry.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n            remove_btn = tk.Button(self, text='Remove', command=self.destroy)\n            remove_btn.pack(pady=5)\n\n        elif count > 18 and count <=24:\n            tk.Frame.__init__(self, mid3, bg='gray20')\n            self.pack(side=tk.LEFT, padx=5, pady=5)\n\n            comp_canvas = tk.Canvas(self, width=200, height=200, relief=tk.RIDGE, bd=1, bg='gray15')\n            comp_canvas.pack(side=tk.TOP, anchor=tk.NW, padx=30, pady=15)\n\n            title_lbl = tk.Label(comp_canvas, text='Component Information %d' % count, fg=fg, bg='gray25')\n            title_lbl.pack()\n\n            #Component Name\n            name_frame = tk.Frame(comp_canvas, relief=tk.FLAT, bd=0, bg='gray15')\n            name_frame.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n            name_lbl = tk.Label(name_frame, relief=tk.FLAT, bd=0, bg='gray15')\n            name_lbl.config(bd=0, text='Name: ', font='System 6', fg=fg)\n            name_lbl.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n            name_reg = mid3.register(self.name_validate)\n\n            self.name_var = tk.StringVar()\n            self.name_var.set('')\n\n            name_entry = ttk.Entry(name_frame, textvariable=self.name_var, validate=\"key\", validatecommand=(name_reg, '%P'))\n            name_entry.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n            #Component Power(kW) (must be real)\n            power_frame = tk.Frame(comp_canvas, relief=tk.FLAT, bd=0, bg='gray15')\n            power_frame.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n            power_lbl = tk.Label(power_frame, relief=tk.FLAT, bd=0, bg='gray15')\n            power_lbl.config(bd=0, text='Power(kW): ', font='System 6', fg=fg)\n            power_lbl.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n            power_reg = mid3.register(self.power_validate)\n\n            self.power_var = tk.DoubleVar()\n            self.power_var.set('0.0')\n\n            power_entry = ttk.Entry(power_frame, textvariable=self.power_var, validate=\"key\", validatecommand=(power_reg, '%P'))\n            power_entry.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n            #Component Quantity\n            quantity_frame = tk.Frame(comp_canvas, relief=tk.FLAT, bd=0, bg='gray15')\n            quantity_frame.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n            quantity_lbl = tk.Label(quantity_frame, relief=tk.FLAT, bd=0, bg='gray15')\n            quantity_lbl.config(bd=0, text='Quantity: ', font='System 6', fg=fg)\n            quantity_lbl.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n            quantity_reg = mid3.register(self.quantity_validate)\n\n            self.quantity_var = tk.IntVar()\n            self.quantity_var.set('1')\n\n            quantity_entry = ttk.Entry(quantity_frame, textvariable=self.quantity_var, validate=\"key\", validatecommand=(quantity_reg, '%P'))\n            quantity_entry.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n            remove_btn = tk.Button(self, text='Remove', command=self.destroy)\n            remove_btn.pack(pady=5)\n\n        elif count > 24 and count <=30:\n            tk.Frame.__init__(self, bottom, bg='gray20')\n            self.pack(side=tk.LEFT, padx=5, pady=5)\n\n            comp_canvas = tk.Canvas(self, width=200, height=200, relief=tk.RIDGE, bd=1, bg='gray15')\n            comp_canvas.pack(side=tk.TOP, anchor=tk.NW, padx=30, pady=15)\n\n            title_lbl = tk.Label(comp_canvas, text='Component Information %d' % count, fg=fg, bg='gray25')\n            title_lbl.pack()\n\n            #Component Name\n            name_frame = tk.Frame(comp_canvas, relief=tk.FLAT, bd=0, bg='gray15')\n            name_frame.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n            name_lbl = tk.Label(name_frame, relief=tk.FLAT, bd=0, bg='gray15')\n            name_lbl.config(bd=0, text='Name: ', font='System 6', fg=fg)\n            name_lbl.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n            name_reg = bottom.register(self.name_validate)\n\n            self.name_var = tk.StringVar()\n            self.name_var.set('')\n\n            name_entry = ttk.Entry(name_frame, textvariable=self.name_var, validate=\"key\", validatecommand=(name_reg, '%P'))\n            name_entry.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n            #Component Power(kW) (must be real)\n            power_frame = tk.Frame(comp_canvas, relief=tk.FLAT, bd=0, bg='gray15')\n            power_frame.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n            power_lbl = tk.Label(power_frame, relief=tk.FLAT, bd=0, bg='gray15')\n            power_lbl.config(bd=0, text='Power(kW): ', font='System 6', fg=fg)\n            power_lbl.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n            power_reg = bottom.register(self.power_validate)\n\n            self.power_var = tk.DoubleVar()\n            self.power_var.set('0.0')\n\n            power_entry = ttk.Entry(power_frame, textvariable=self.power_var, validate=\"key\", validatecommand=(power_reg, '%P'))\n            power_entry.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n            #Component Quantity\n            quantity_frame = tk.Frame(comp_canvas, relief=tk.FLAT, bd=0, bg='gray15')\n            quantity_frame.pack(side=tk.TOP, anchor=tk.N, fill=tk.X, expand=True)\n\n            quantity_lbl = tk.Label(quantity_frame, relief=tk.FLAT, bd=0, bg='gray15')\n            quantity_lbl.config(bd=0, text='Quantity: ', font='System 6', fg=fg)\n            quantity_lbl.pack(side=tk.LEFT, anchor=tk.W, padx=2, pady=2)\n\n            quantity_reg = bottom.register(self.quantity_validate)\n\n            self.quantity_var = tk.IntVar()\n            self.quantity_var.set('1')\n\n            quantity_entry = ttk.Entry(quantity_frame, textvariable=self.quantity_var, validate=\"key\", validatecommand=(quantity_reg, '%P'))\n            quantity_entry.pack(side=tk.RIGHT, anchor=tk.E, padx=2, pady=2)\n\n            remove_btn = tk.Button(self, text='Remove', command=self.destroy)\n            remove_btn.pack(pady=5)\n\n\n\n\n\nelse:\n            ms.showerror('Error','You cannot create more than 30 components', icon='error')",
			"settings":
			{
				"buffer_size": 14679,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package ResourceViewer",
				"PackageResourceViewer: Open Resource"
			],
			[
				"Packalge Control: Install Package",
				"Package Control: Install Package"
			],
			[
				"Install Package Control",
				"Package Control: Install Package"
			],
			[
				"prv",
				"Permute Lines: Reverse"
			],
			[
				"python",
				"Build With: Python"
			],
			[
				"Install",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/marco/Desktop/Programming/Heat Exchanger Avg Cost/main revamped/ORCCalculator.py",
		"/C/Users/marco/Desktop/Programming/Heat Exchanger Avg Cost/main revamped/ORCCalculator.sublime-workspace",
		"/C/Users/marco/Desktop/Programming/Heat Exchanger Avg Cost/main/.git/COMMIT_EDITMSG",
		"/C/Users/marco/Desktop/Collyer's Folder/Computer Science/Y2 Project/Library Management System/.git/COMMIT_EDITMSG",
		"/C/Users/marco/Desktop/Collyer's Folder/Computer Science/Y2 Project/Library Management System/create_db.py",
		"/C/Users/marco/Desktop/Collyer's Folder/Computer Science/Y2 Project/Library Management System/insert_book_values.py",
		"/C/Users/marco/Desktop/Programming/MERCEDESBENZ.py",
		"/C/Users/marco/Desktop/Programming/Mandelbrot fractaql/fractal.py",
		"/C/Users/marco/Desktop/Collyer's Folder/Computer Science/Y2 Project/Library Management System/test.py",
		"/C/Users/marco/Desktop/Collyer's Folder/Computer Science/Y2 Project/Library Management System/modes.py",
		"/C/Users/marco/Desktop/Collyer's Folder/Computer Science/Y2 Project/Library Management System/testing different modes.py",
		"/C/Users/marco/Desktop/Collyer's Folder/Computer Science/Y2 Project/Library Management System/join statement tests.py",
		"/C/Users/marco/Desktop/Collyer's Folder/Computer Science/Y2 Project/Library Management System/autocomplete.py",
		"/C/Users/marco/Desktop/Programming/TEST_DB.py",
		"/C/Users/marco/Desktop/Programming/hash issue db.py",
		"/C/Users/marco/AppData/Roaming/Sublime Text 3/Packages/Default/exec.py",
		"/C/Users/marco/Desktop/Collyer's Folder/Computer Science/Y2 Project/create_db.py",
		"/C/Users/marco/Desktop/Programming/Library Management System Flask/run.py",
		"/C/Users/marco/Desktop/Programming/Library Management System Flask/LMSf/users/utils.py",
		"/C/Users/marco/Desktop/Programming/Library Management System Flask/LMSf/users/routes.py",
		"/C/Users/marco/Desktop/Programming/Library Management System Flask/LMSf/users/forms.py",
		"/C/Users/marco/Desktop/Programming/Library Management System Flask/LMSf/posts/routes.py",
		"/C/Users/marco/Desktop/Programming/Library Management System Flask/LMSf/main/routes.py",
		"/C/Users/marco/Desktop/Programming/Library Management System Flask/LMSf/models.py",
		"/C/Users/marco/Desktop/Programming/Library Management System Flask/LMSf/__init__.py",
		"/C/Users/marco/Desktop/Programming/Library Management System Flask/LMSf/env/Scripts/Activate.ps1",
		"/C/Users/marco/Desktop/Programming/Library Management System Flask/LMSf/env/Scripts/activate.bat",
		"/C/Users/marco/Desktop/Programming/Library Management System Flask/LMSf/env/Scripts/activate",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/users/forms.py",
		"/C/Users/marco/Desktop/Programming/Flask/Procfile",
		"/C/Users/marco/Desktop/Programming/Flask/requirements.txt",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/__init__.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/errors/500.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/errors/403.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/errors/404.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/errors/handlers.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/errors/__init__.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/models.py",
		"/C/Users/marco/Desktop/Programming/Flask/run.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/users/utils.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/config.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/user_posts.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/register.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/post.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/login.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/layout.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/home.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/users/routes.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/posts/routes.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/main/routes.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/env/Lib/site-packages/flask/helpers.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/env/Lib/site-packages/flask_login/utils.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/posts/forms.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/routes.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/forms.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/account.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/create_post.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/reset_token.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/templates/reset_request.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/main/__init__.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/posts/__init__.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/users/__init__.py",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/reset_token.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial/static/posts.json",
		"/C/Users/marco/Desktop/Programming/Flask/static/main.css",
		"/C/Users/marco/Desktop/Programming/Flask/templates/layout.html",
		"/C/Users/marco/Desktop/Programming/Flask/templates/about.html",
		"/C/Users/marco/Desktop/Programming/Flask/templates/home.html",
		"/C/Users/marco/Desktop/Programming/Flask/forms.py",
		"/C/Users/marco/Desktop/Programming/Flask/templates/login.html",
		"/C/Users/marco/Desktop/Programming/Flask/templates/register.html",
		"/C/Users/marco/Desktop/Programming/Flask/flask_tutorial.py",
		"/C/Users/marco/Desktop/Programming/Flask/models.py",
		"/C/Users/marco/AppData/Local/Temp/kite_tutorial.py",
		"/C/Users/marco/AppData/Roaming/Sublime Text 3/Packages/User/python3.sublime-build",
		"/C/Users/marco/AppData/Roaming/Sublime Text 3/Packages/KiteSublime/KiteSublime.sublime-settings",
		"/C/Users/marco/Desktop/Programming/Flask/flask tutorial.sublime-project",
		"/C/Users/marco/Desktop/Programming/Graveyard/emailsdcz",
		"/C/Users/marco/Desktop/Collyer's Folder/Computer Science/Transfer Project/testers/eTicket email Receipt Invoices Tests/Invoice Testing.py"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 619.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"title_lbl",
			"num",
			"'gray25'",
			"mid1_children",
			"top_children",
			"count",
			"self = top",
			"[\"master\"]",
			"top",
			"TOP",
			"top",
			"x",
			"X",
			"x",
			"X",
			"x",
			"X",
			"x",
			"X",
			"name",
			"Name",
			"name",
			"Name",
			"name",
			"Name",
			"name",
			"page2"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10391,
						"regions":
						{
						},
						"selection":
						[
							[
								7469,
								7469
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2459.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14679,
						"regions":
						{
						},
						"selection":
						[
							[
								14679,
								14600
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3627.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 209.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 126.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\Users\\marco\\Desktop\\Programming\\Heat Exchanger Avg Cost\\main revamped\\ORCCalculator.sublime-workspace"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 202.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
